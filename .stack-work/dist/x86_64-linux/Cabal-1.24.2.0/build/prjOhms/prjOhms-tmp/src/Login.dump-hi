
==================== FINAL INTERFACE ====================
2017-06-13 23:44:46.038184 UTC

interface main@main:Login 8002
  interface hash: 6fd533912626d42dfc2d9b2471fc5bf6
  ABI hash: 2762eb7eabfddf4bc53210f82cb89b71
  export-list hash: a30f73b3e9dd5dd88da852fc956b1314
  orphan hash: 851d39810a57851b12a92afa6660e91b
  flag hash: 6b9b22cfb17b926f6fb135dccd35bd11
  sig of: Nothing
  used TH splices: True
  where
exports:
  Login.cdPasswordField
  Login.formLogin
  Login.getLoginR
  Login.nmUsuarioField
  Login.postLoginR
  Login.postLogoutR
module dependencies: Foundation
package dependencies: aeson-1.0.2.1@aeson-1.0.2.1-DDov2e1Yemt94DudUvTLYZ
                      aeson-compat-0.3.6@aeson-compat-0.3.6-2DGXsEffmptCnWvZsLNGWu
                      ansi-terminal-0.6.2.3@ansi-terminal-0.6.2.3-4HPxin1iv6RAndS8lH3nzo
                      appar-0.1.4@appar-0.1.4-DGWHHt2WRn9FI49prcwO9
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.1.1@async-2.1.1.1-8yywY4inVGRLJSCg60gBXj
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-HhuV3U7exg79UmloYn3kX2
                      attoparsec-iso8601-1.0.0.0@attoparsec-iso8601-1.0.0.0-HsZBRE01qJxJ1MwODysbnY
                      auto-update-0.1.4@auto-update-0.1.4-EmUvNdmhEju51bHrtaEMpz
                      base-4.9.1.0
                      base-compat-0.9.3@base-compat-0.9.3-KeJp8zYMpcS9WibvTcxU22
                      base64-bytestring-1.0.0.1@base64-bytestring-1.0.0.1-4O9TExPPz6eI82Yj7L4SIj
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-CGB8BvrFgghHy5bLy0SFOg
                      blaze-html-0.8.1.3@blaze-html-0.8.1.3-4x5sR7CihaZBuBa398ibiy
                      blaze-markup-0.7.1.1@blaze-markup-0.7.1.1-7tIWNv8iALFJhJ4kVxNmNT
                      byteable-0.1.1@byteable-0.1.1-2lU1pexQSLj1KbNO17UifQ
                      byteorder-1.0.4@byteorder-1.0.4-9NlNHkBVdo7F1prFVKrkcH
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      case-insensitive-1.2.0.9@case-insensitive-1.2.0.9-DO0AWfy7hdR2nQUG46ef58
                      cereal-0.5.4.0@cereal-0.5.4.0-BsAGxfp8yAs3CiRo2E875e
                      cipher-aes-0.2.11@cipher-aes-0.2.11-3bgwrLYUdx3AMYHUPuxu87
                      clientsession-0.9.1.2@clientsession-0.9.1.2-KRcVaZxQ84gBM2BKF2NUTQ
                      conduit-1.2.10@conduit-1.2.10-GgLn1U1QYcf9wsQecuZ1A4
                      conduit-extra-1.1.15@conduit-extra-1.1.15-8sHNT28fM12994kb54uPaH
                      containers-0.5.7.1@containers-0.5.7.1
                      cookie-0.4.2.1@cookie-0.4.2.1-K68NuFIZ07nEstxwB6c3aL
                      cprng-aes-0.6.1@cprng-aes-0.6.1-9Ysh71z5FLmK1QfZUn0KHr
                      crypto-api-0.13.2@crypto-api-0.13.2-IETueZuD8kB6D6D3e0Qo1q
                      crypto-cipher-types-0.0.9@crypto-cipher-types-0.0.9-2naOMJ2jnvG5GhEt4Ao7bp
                      crypto-random-0.0.9@crypto-random-0.0.9-AoGITFIsDYP2IQzwS9RQF8
                      cryptohash-0.11.9@cryptohash-0.11.9-AwRqZE0EZ5i8pER7MJsLoX
                      cryptohash-conduit-0.1.1@cryptohash-conduit-0.1.1-DQeBh2BGjiJ2aigRmOz6SM
                      cryptonite-0.21@cryptonite-0.21-47iYBNmsFlII2FZyak8KXj
                      css-text-0.1.2.2@css-text-0.1.2.2-H2nzLAF8Lvh29Ya09mQHei
                      data-default-0.7.1.1@data-default-0.7.1.1-7EGYJX2YWqWJRbPFUHNoCr
                      data-default-class-0.1.2.0@data-default-class-0.1.2.0-GsXqKN6o1X9jr0fF5qCVD
                      data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-bob6IQGdJq92c061H46zK
                      data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-FKnZBeovJMk4M89wQxDhjl
                      data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-9zaGDEmgOixKkmLylWdN5l
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      deepseq-generics-0.2.0.0@deepseq-generics-0.2.0.0-IjS8Jfo7YCzLKpV8N96gbz
                      directory-1.3.0.0@directory-1.3.0.0
                      dlist-0.8.0.2@dlist-0.8.0.2-6Wnps4GD7EFnRucVzXIFD
                      easy-file-0.2.1@easy-file-0.2.1-rguMBNaECxLikt4CCDx0D
                      email-validate-2.2.0@email-validate-2.2.0-Dk37llbyP6jDId6o9ZMdq5
                      entropy-0.3.7@entropy-0.3.7-GVoReSVE1cZ4Y1pKgzhBYO
                      exceptions-0.8.3@exceptions-0.8.3-ADEDRATtUrMK1JW4zMQ9U
                      fast-logger-2.4.10@fast-logger-2.4.10-AASpkRsupvWAQEpNM5DQI
                      file-embed-0.0.10@file-embed-0.0.10-KWMmUDaNSRP7AxWSEHlrrK
                      filepath-1.4.1.1@filepath-1.4.1.1
                      foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.0@hashable-1.2.6.0-3EXxoqeEgbfAKr6aGkye6x
                      http-api-data-0.3.7@http-api-data-0.3.7-Fjq248miKA8D5hFdZGD7aB
                      http-date-0.0.6.1@http-date-0.0.6.1-DIpeM7nOKwq7aBmb5ryU4N
                      http-types-0.9.1@http-types-0.9.1-AUkzzKpOoLmKIvDSpmjcFz
                      http2-1.6.3@http2-1.6.3-AntBmJg95Sg1Na7lIPgyhO integer-gmp-1.0.0.1
                      integer-logarithms-1.0.1@integer-logarithms-1.0.1-IEHCuEd5sG4JjSjlx7m5JF
                      iproute-1.7.1@iproute-1.7.1-4HULutk0xITKNjI1pwYrD4
                      lifted-base-0.2.3.10@lifted-base-0.2.3.10-BoEavBFIcriDza63doCjS2
                      memory-0.14.3@memory-0.14.3-HxN2RgwYLqT3iHrmHIXRUq
                      mime-types-0.1.0.7@mime-types-0.1.0.7-31dnC2ifQ9r5TApUZagLPk
                      mmorph-1.0.9@mmorph-1.0.9-5bASEvmIkr5CpdAYXwPsn0
                      monad-control-1.0.1.0@monad-control-1.0.1.0-LQwQ0Hi5p0oAccTfTzbfD5
                      monad-logger-0.3.22@monad-logger-0.3.22-Ff8c9txl6qcL0x0EY6ih77
                      monad-loops-0.4.3@monad-loops-0.4.3-ERCN4ZKCeeS5SRhwqXsLBP
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      mwc-random-0.13.5.0@mwc-random-0.13.5.0-Dp3Ri46ZxJuCFZWIowNqha
                      network-2.6.3.1@network-2.6.3.1-ABFtZSq90Z9BfMXNiqgBoe
                      network-uri-2.6.1.0@network-uri-2.6.1.0-EwGrJ9bdUqR1E7dAIJ4cwF
                      old-locale-1.0.0.7@old-locale-1.0.0.7-KGBP1BSKxH5GCm0LnZP04j
                      old-time-1.1.0.3@old-time-1.1.0.3-KWRsMSdY26c2L27Y9n9cyq
                      parsec-3.1.11@parsec-3.1.11-113irVHGgd88sRnywByDNw
                      path-pieces-0.2.1@path-pieces-0.2.1-7jYjtDsNHN0JfYriIYgB3j
                      persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy
                      persistent-postgresql-2.6.1@persistent-postgresql-2.6.1-8UEoLIijY1BB8D8YolPhem
                      persistent-template-2.5.2@persistent-template-2.5.2-BHHn8Q2FqmqDselnduIEAC
                      postgresql-libpq-0.9.3.0@postgresql-libpq-0.9.3.0-FVKnfWO5tn29L1HQjaQ0as
                      postgresql-simple-0.5.2.1@postgresql-simple-0.5.2.1-7l6cEp6CJ0z95XHG51qnvo
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      process-1.4.3.0@process-1.4.3.0
                      psqueues-0.2.2.3@psqueues-0.2.2.3-9nDehYbroydEusqdFJopTa
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      resource-pool-0.2.3.2@resource-pool-0.2.3.2-1AOSrWwsk6kGNVrZRdikMV
                      resourcet-1.1.9@resourcet-1.1.9-Ej57FoSD8NQLck5u9CwWz8
                      safe-0.3.14@safe-0.3.14-GsbXn9D9F3BDazVNcErzdQ
                      scientific-0.3.4.12@scientific-0.3.4.12-J9HRl69dpDBBzAMKxlfkoh
                      securemem-0.1.9@securemem-0.1.9-8Xi2wNoj8BIHAoMFWnW1JR
                      shakespeare-2.0.13@shakespeare-2.0.13-1UUIku9jrJBLBXC3oDLYXd
                      silently-1.2.5@silently-1.2.5-HsbqnAAyIOA8viZ4Sccs0a
                      simple-sendfile-0.2.25@simple-sendfile-0.2.25-JJ9zm1wZxYIARxlVa3oQgs
                      skein-1.0.9.4@skein-1.0.9.4-1r9hT02ZzU5HeQ9SvXvQV
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      stm-chans-3.0.0.4@stm-chans-3.0.0.4-JX6Y7GVvdkg3BduVhEnPWu
                      streaming-commons-0.1.17@streaming-commons-0.1.17-pXxQEId7Ie1SLoOLcDazB
                      stringsearch-0.3.6.6@stringsearch-0.3.6.6-2soGORichTR6reHVhDqKip
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      tagsoup-0.14.1@tagsoup-0.14.1-6d5jSu6VuYIIoyQixz5L7u
                      template-haskell-2.11.1.0
                      text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-KZ1jqNx8uhlHjmuPPj6V1Y
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-base-0.4.4@transformers-base-0.4.4-GKSs0LKukAL8ymq2naFmrH
                      unix-2.7.2.1@unix-2.7.2.1
                      unix-compat-0.4.3.1@unix-compat-0.4.3.1-Ausmw6d7KIwA7sl52mzqxC
                      unix-time-0.3.7@unix-time-0.3.7-EhnEKT4D7hJajV74Sk5BE
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o
                      utf8-string-1.0.1.1@utf8-string-1.0.1.1-1DpjxLeTvGg7ttZZojxJR5
                      uuid-types-1.0.3@uuid-types-1.0.3-29hQYgnErrj49JbrlmjGHl
                      vault-0.3.0.7@vault-0.3.0.7-HJSJzPTOq6IJLrOGPrOio
                      vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG
                      wai-3.2.1.1@wai-3.2.1.1-H6cJdoNnPqk1Ch333qtaPo
                      wai-app-static-3.1.6.1@wai-app-static-3.1.6.1-2rsQ1EVge26CO53M4gLdkE
                      wai-extra-3.0.19.1@wai-extra-3.0.19.1-3in25hi26fo3ynYVCgt8Z3
                      wai-logger-2.3.0@wai-logger-2.3.0-EYYpHmikC5d8pavu5CHXnD
                      warp-3.2.11.2@warp-3.2.11.2-EncNvviAzZWHK6yVvhIgD5
                      word8-0.1.2@word8-0.1.2-9WDPGCTpW7JJnsiAQavtd1
                      xss-sanitize-0.3.5.7@xss-sanitize-0.3.5.7-9L4rIyhZC8H6IVBX0SpXFc
                      yesod-1.4.5@yesod-1.4.5-Gjjcx4wipmk9Grx3eCz8hV
                      yesod-core-1.4.33@yesod-core-1.4.33-8AMCPxWRGte91vFglpHrX8
                      yesod-form-1.4.11@yesod-form-1.4.11-AYu9ZrsCoZVGuJCtTIMeFI
                      yesod-persistent-1.4.2@yesod-persistent-1.4.2-FOVEW0FUJLsHmVFGlu8EFf
                      yesod-static-1.5.2@yesod-static-1.5.2-5JxqasNDKv61u38MfmOKcf
                      zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-HhuV3U7exg79UmloYn3kX2:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-HhuV3U7exg79UmloYn3kX2:Data.Attoparsec.Text.Internal
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         crypto-api-0.13.2@crypto-api-0.13.2-IETueZuD8kB6D6D3e0Qo1q:Crypto.Classes
         data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-bob6IQGdJq92c061H46zK:Data.Default.Instances.Containers
         data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-FKnZBeovJMk4M89wQxDhjl:Data.Default.Instances.DList
         data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-9zaGDEmgOixKkmLylWdN5l:Data.Default.Instances.OldLocale
         hashable-1.2.6.0@hashable-1.2.6.0-3EXxoqeEgbfAKr6aGkye6x:Data.Hashable.Generic
         network-2.6.3.1@network-2.6.3.1-ABFtZSq90Z9BfMXNiqgBoe:Network.Socket
         persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy:Database.Persist.Sql.Orphan.PersistQuery
         persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy:Database.Persist.Sql.Orphan.PersistStore
         persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy:Database.Persist.Sql.Orphan.PersistUnique
         persistent-template-2.5.2@persistent-template-2.5.2-BHHn8Q2FqmqDselnduIEAC:Database.Persist.TH
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         unix-time-0.3.7@unix-time-0.3.7-EhnEKT4D7hJajV74Sk5BE:Data.UnixTime.Diff
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-HhuV3U7exg79UmloYn3kX2:Data.Attoparsec.Internal.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         conduit-1.2.10@conduit-1.2.10-GgLn1U1QYcf9wsQecuZ1A4:Data.Conduit.Internal.Conduit
                         conduit-1.2.10@conduit-1.2.10-GgLn1U1QYcf9wsQecuZ1A4:Data.Conduit.Internal.Pipe
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.2@dlist-0.8.0.2-6Wnps4GD7EFnRucVzXIFD:Data.DList
                         email-validate-2.2.0@email-validate-2.2.0-Dk37llbyP6jDId6o9ZMdq5:Text.Email.Parser
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Array.Bitmap
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Array.Boxed
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Array.Chunked.Unboxed
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Array.Unboxed
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Collection.Buildable
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Collection.Collection
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Collection.Element
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Collection.Keyed
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Collection.Mutable
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Numerical.Subtractive
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Primitive.Monad
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Primitive.Types.OffsetSize
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.String.Encoding.ASCII7
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.String.Encoding.ISO_8859_1
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.String.Encoding.UTF16
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.String.Encoding.UTF32
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.String.UTF8
                         foundation-0.0.7@foundation-0.0.7-DAnbpeCletfE8qJLMJmu5X:Foundation.Tuple
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         iproute-1.7.1@iproute-1.7.1-4HULutk0xITKNjI1pwYrD4:Data.IP.Addr
                         iproute-1.7.1@iproute-1.7.1-4HULutk0xITKNjI1pwYrD4:Data.IP.Range
                         main@main:Foundation
                         monad-control-1.0.1.0@monad-control-1.0.1.0-LQwQ0Hi5p0oAccTfTzbfD5:Control.Monad.Trans.Control
                         monad-logger-0.3.22@monad-logger-0.3.22-Ff8c9txl6qcL0x0EY6ih77:Control.Monad.Logger
                         mwc-random-0.13.5.0@mwc-random-0.13.5.0-Dp3Ri46ZxJuCFZWIowNqha:System.Random.MWC
                         network-uri-2.6.1.0@network-uri-2.6.1.0-EwGrJ9bdUqR1E7dAIJ4cwF:Network.URI
                         persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy:Database.Persist.Class.PersistConfig
                         persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy:Database.Persist.Sql.Orphan.PersistStore
                         persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy:Database.Persist.Sql.Types.Internal
                         persistent-postgresql-2.6.1@persistent-postgresql-2.6.1-8UEoLIijY1BB8D8YolPhem:Database.Persist.Postgresql
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
                         resourcet-1.1.9@resourcet-1.1.9-Ej57FoSD8NQLck5u9CwWz8:Control.Monad.Trans.Resource.Internal
                         shakespeare-2.0.13@shakespeare-2.0.13-1UUIku9jrJBLBXC3oDLYXd:Text.Internal.Css
                         shakespeare-2.0.13@shakespeare-2.0.13-1UUIku9jrJBLBXC3oDLYXd:Text.Shakespeare
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o:Data.HashSet
                         uuid-types-1.0.3@uuid-types-1.0.3-29hQYgnErrj49JbrlmjGHl:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuid-types-1.0.3-29hQYgnErrj49JbrlmjGHl:Data.UUID.Types.Internal.Builder
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed.Base
                         yesod-core-1.4.33@yesod-core-1.4.33-8AMCPxWRGte91vFglpHrX8:Yesod.Core.Class.Handler
                         yesod-core-1.4.33@yesod-core-1.4.33-8AMCPxWRGte91vFglpHrX8:Yesod.Core.Internal.LiteApp
                         yesod-core-1.4.33@yesod-core-1.4.33-8AMCPxWRGte91vFglpHrX8:Yesod.Core.Types
                         yesod-static-1.5.2@yesod-static-1.5.2-5JxqasNDKv61u38MfmOKcf:Yesod.Static
                         zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp:Codec.Compression.Zlib.Stream
import  -/  base-4.9.1.0:Control.Applicative 32430a90492e727f4bd80db71c28600c
import  -/  base-4.9.1.0:Data.Either 20b09ef8d0a5b74fdec011c40c1587f5
import  -/  base-4.9.1.0:Data.Functor 5ab1dc703df5b482e77efb697833ca3c
import  -/  base-4.9.1.0:Data.Maybe d876c4ffe4b3c43755a781e8ad860d88
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  blaze-html-0.8.1.3@blaze-html-0.8.1.3-4x5sR7CihaZBuBa398ibiy:Text.Blaze.Html 288dbf097dbd0ff17b50c3c1330477db
import  -/  blaze-markup-0.7.1.1@blaze-markup-0.7.1.1-7tIWNv8iALFJhJ4kVxNmNT:Text.Blaze.Internal 52ba665013f4dfa6d731e8584348806e
import  -/  Foundation a0598f6fc2f1b24ea2432895480aa08b
  exports: d2b17db5f0ea3039ba1660e9cfc6c181
  ConsumoCasaR 7d5e69191d6371a635e1e73caa95a515
  CriarAmbienteR 11c1c04ad80121509962a3f0c84d4d69
  Form a53f8da492798db2d0f36595299e4c10
  Handler d05e881643538978113ab2e1de057e56
  LoginR 63acb5fc7048924750b64fd4eae5ea02
  UsuarioCdPassword 68fdf5c15159db3de970ef79034bc065
  UsuarioNmUsuario 95a8b4c185f4711d1ccdd0c38c012f38
  usuarioTpUsuario b58b736552e52df448ad718409c86377
  widgetForm 48f1f2f48731be4b6961739dd33af4d9
import  -/  monad-logger-0.3.22@monad-logger-0.3.22-Ff8c9txl6qcL0x0EY6ih77:Control.Monad.Logger c186132138b23c0e4c9839f4d7247bee
import  -/  persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy:Database.Persist 0cd095f1f9ea2d6556721f74560e33a4
import  -/  persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy:Database.Persist.Class.PersistEntity 2dfa7e1527d6a9f72c2e7017cee17d47
import  -/  persistent-2.6.1@persistent-2.6.1-GN6JgXR46m4BfSXz1mIhIy:Database.Persist.Class.PersistQuery 876fe93620908107224b47244ae2dedc
import  -/  persistent-postgresql-2.6.1@persistent-postgresql-2.6.1-8UEoLIijY1BB8D8YolPhem:Database.Persist.Postgresql 326569900059893a227843896529734d
import  -/  shakespeare-2.0.13@shakespeare-2.0.13-1UUIku9jrJBLBXC3oDLYXd:Text.Hamlet f1623e2fa6537db057ee72b37a27e00c
import  -/  text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text 9ba4693a108b74a0b1eb8f7d38f1abee
import  -/  text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Internal a2f6f66c5bb1247458d9fa25257ab188
import  -/  yesod-1.4.5@yesod-1.4.5-Gjjcx4wipmk9Grx3eCz8hV:Yesod 9b32a342acc9baee13df0be07e3d39c5
import  -/  yesod-core-1.4.33@yesod-core-1.4.33-8AMCPxWRGte91vFglpHrX8:Yesod.Core.Class.Yesod 0f950f5b38ca208030e2bcd8e2a1d8de
import  -/  yesod-core-1.4.33@yesod-core-1.4.33-8AMCPxWRGte91vFglpHrX8:Yesod.Core.Handler fb74858425a74dc2ac28440095be4990
import  -/  yesod-core-1.4.33@yesod-core-1.4.33-8AMCPxWRGte91vFglpHrX8:Yesod.Core.Widget 50472288dfa3af7a662f0b4e16cf1eb4
import  -/  yesod-form-1.4.11@yesod-form-1.4.11-AYu9ZrsCoZVGuJCtTIMeFI:Yesod.Form.Functions 30116c4748d2a9aa9d527802b240f53f
import  -/  yesod-form-1.4.11@yesod-form-1.4.11-AYu9ZrsCoZVGuJCtTIMeFI:Yesod.Form.Types e06b3d57400b5cd8ec2ddccfdae55536
import  -/  yesod-persistent-1.4.2@yesod-persistent-1.4.2-FOVEW0FUJLsHmVFGlu8EFf:Yesod.Persist.Core 39014f6db198f5fe2002eb686b30660e
addDependentFile "/home/ubuntu/.stack/programs/x86_64-linux/ghc-8.0.2/lib/ghc-8.0.2/include/ghcversion.h"
addDependentFile ".stack-work/dist/x86_64-linux/Cabal-1.24.2.0/build/autogen/cabal_macros.h"
addDependentFile "/usr/include/stdc-predef.h"
90ceb8927196f2e2fd3280cf06c5fc43
  $s$WUsuarioCdPassword2 ::
    Data.Text.Internal.Text GHC.Types.~~ Data.Text.Internal.Text
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Data.Text.Internal.Text
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
6d739cbada6c790c86f85ba88ee2e15e
  $s$fApplicativeHandlerT ::
    GHC.Base.Applicative (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Login.$s$fApplicativeHandlerT_$s$fFunctorHandlerT @ site)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$cpure
                     @ GHC.Types.IO
                     @ site
                     Login.$s$fApplicativeHandlerT_$dMonad)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$c<*>
                     @ GHC.Types.IO
                     @ site
                     Login.$s$fApplicativeHandlerT_$dMonad)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$c*>
                     @ GHC.Types.IO
                     @ site
                     Login.$s$fApplicativeHandlerT_$dMonad)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$c<*
                     @ GHC.Types.IO
                     @ site
                     Login.$s$fApplicativeHandlerT_$dMonad) -}
5b7cdf411d03865cac155edc4962c51a
  $s$fApplicativeHandlerT_$creturn ::
    a -> Yesod.Core.Types.HandlerT site GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><S,U>,
     Unfolding: InlineRule (1, True, True)
                (\ @ site
                   @ a
                   (eta9 :: a)
                   (eta10 :: Yesod.Core.Types.HandlerData
                               site (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta11 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (GHC.Base.returnIO @ a eta9) `cast` (GHC.Types.N:IO[0] <a>_R)
                   eta11)
                  `cast`
                (forall (site :: <*>_N) (a :: <*>_N).
                 <a>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <site>_N <GHC.Types.IO>_N <a>_N))) -}
df69b3ea248809f8a6684e62f50e3231
  $s$fApplicativeHandlerT_$dMonad :: GHC.Base.Monad GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) GHC.Base.$fMonadIO -}
5c74acd9f79d62568dd9c7053e93ca62
  $s$fApplicativeHandlerT_$s$fFunctorHandlerT ::
    GHC.Base.Functor (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Yesod.Core.Types.$fFunctorHandlerT_$cfmap
                     @ GHC.Types.IO
                     @ site
                     Login.$s$fApplicativeHandlerT_$dMonad)
                  (Yesod.Core.Types.$fFunctorHandlerT_$c<$
                     @ GHC.Types.IO
                     @ site
                     Login.$s$fApplicativeHandlerT_$dMonad) -}
92533fb6da2f632d1ee627900f0819ba
  $s$fFunctorAForm_$s$fMonadHandlerT ::
    GHC.Base.Monad (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Yesod.Core.Types.$fMonadHandlerT_$cp1Monad
                     @ GHC.Types.IO
                     @ site
                     Login.$s$fApplicativeHandlerT_$dMonad)
                  (Yesod.Core.Types.$fMonadHandlerT_$c>>=
                     @ GHC.Types.IO
                     @ site
                     Login.$s$fApplicativeHandlerT_$dMonad)
                  (Yesod.Core.Types.$fMonadHandlerT_$c>>
                     @ GHC.Types.IO
                     @ site
                     Login.$s$fApplicativeHandlerT_$dMonad)
                  (Login.$s$fApplicativeHandlerT_$creturn @ site)
                  (Login.$s$fFunctorAForm_$s$fMonadHandlerT_$cfail @ site) -}
5fb182501d3c313bda7d7d20de476dff
  $s$fFunctorAForm_$s$fMonadHandlerT_$cfail ::
    GHC.Base.String -> Yesod.Core.Types.HandlerT site GHC.Types.IO a
  {- Arity: 1, Strictness: <B,U>x,
     Unfolding: InlineRule (1, True, False)
                (\ @ site @ a (eta9 :: GHC.Base.String) ->
                 Yesod.Core.Types.$fMonadHandlerT1
                   @ site
                   @ GHC.Types.IO
                   @ a
                   Login.$s$fApplicativeHandlerT_$dMonad
                   eta9) -}
b1b155b3b8a412f6a558149b436a592e
  $s$fMonadBasebHandlerT ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ GHC.Types.IO
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Login.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp1MonadBase
                     @ site)
                  (Login.$s$fMonadBasebHandlerT_$s$fMonadResourceHandlerT_$cp3MonadResource
                     @ site)
                  (Login.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp3MonadBase
                     @ site)
                  (Login.$s$fMonadBasebHandlerT_$s$fMonadIOHandlerT_$cp1MonadLogger
                     @ site)
                  (Login.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cliftBase
                     @ site) -}
6f6e7825f5eda6823b7590420e91b81d
  $s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cliftBase ::
    GHC.Types.IO α -> Yesod.Core.Types.HandlerT site GHC.Types.IO α
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ @ site @ α (eta9 :: GHC.Types.IO α) ->
                 let {
                   eta10 :: GHC.Types.IO α = GHC.Base.id @ (GHC.Types.IO α) eta9
                 } in
                 (\ (ds :: Yesod.Core.Types.HandlerData
                             site (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                  eta10)
                   `cast`
                 (Sym (Yesod.Core.Types.N:HandlerT[0]
                           <site>_N <GHC.Types.IO>_N <α>_N))) -}
e2598c46d4cb373cec50fb83e7e41e38
  $s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp1MonadBase ::
    GHC.Base.Applicative GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (\ @ site -> GHC.Base.$fApplicativeIO) -}
651067ddce3fc73f93f3816be686246d
  $s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp3MonadBase ::
    GHC.Base.Monad GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (\ @ site -> GHC.Base.$fMonadIO) -}
c6776186cb628995510ee9177ac6153a
  $s$fMonadBasebHandlerT_$s$fMonadIOHandlerT_$cp1MonadLogger ::
    GHC.Base.Monad (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Login.$s$fFunctorAForm_$s$fMonadHandlerT -}
82cd63821caa952fa9353ff2bfec88cc
  $s$fMonadBasebHandlerT_$s$fMonadResourceHandlerT_$cp3MonadResource ::
    GHC.Base.Applicative (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Login.$s$fApplicativeHandlerT -}
25142af1b3328da55505a9b0cdc7cbed
  $s$fMonadHandlerHandlerT ::
    Yesod.Core.Class.Handler.MonadHandler
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT_$cp1MonadHandler
                     @ GHC.Types.IO
                     @ site
                     Login.$s$fMonadHandlerHandlerT1)
                  (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT_$cliftHandlerT
                     @ GHC.Types.IO
                     @ site
                     Login.$s$fMonadHandlerHandlerT1) -}
5556c500b3757d22c326827fff01c56e
  $s$fMonadHandlerHandlerT1 ::
    Control.Monad.Trans.Resource.MonadResourceBase GHC.Types.IO
  {- Strictness: m,
     Unfolding: ((Control.Monad.Trans.Control.$fMonadBaseControlIOIO,
                  Control.Monad.Catch.$fMonadThrowIO,
                  Control.Monad.Base.$fMonadBaseIOIO,
                  Control.Monad.IO.Class.$fMonadIOIO, GHC.Base.$fApplicativeIO)) -}
f03686b9408d1bb1067bd6610e35e249
  $s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT ::
    Control.Monad.IO.Class.MonadIO
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Login.$s$fMonadBasebHandlerT_$s$fMonadIOHandlerT_$cp1MonadLogger
                     @ site)
                  (Login.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cliftBase
                     @ site) -}
9c6675cc030dc419c807c9d48a4bfa0b
  $s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT ::
    Control.Monad.Catch.MonadThrow
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Login.$s$fMonadBasebHandlerT_$s$fMonadIOHandlerT_$cp1MonadLogger
                     @ site)
                  (Login.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT_$cthrowM
                     @ site) -}
0d9e2b31daa96e356399ab5959ee47be
  $s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT_$cthrowM ::
    GHC.Exception.Exception e =>
    e -> Yesod.Core.Types.HandlerT site GHC.Types.IO a
  {- Arity: 4, HasNoCafRefs,
     Strictness: <B,1*U(A,A,1*C1(U),A,A)><B,U><B,A><B,U>x,
     Unfolding: InlineRule (1, True, True)
                (\ @ site
                   @ e
                   @ a
                   (eta9 :: GHC.Exception.Exception e)
                   (x :: e)
                   (eta10 :: Yesod.Core.Types.HandlerData
                               site (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta11 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (GHC.IO.throwIO @ e @ a eta9 x) `cast` (GHC.Types.N:IO[0] <a>_R)
                   eta11)
                  `cast`
                (forall (site :: <*>_N) (e :: <*>_N) (a :: <*>_N).
                 <GHC.Exception.Exception e>_R
                 ->_R <e>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <site>_N <GHC.Types.IO>_N <a>_N))) -}
577ccc66c5e095e0162d157e1e690ccc
  $s$fMonadResourceHandlerT ::
    Control.Monad.Trans.Resource.Internal.MonadResource
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Login.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp1MonadResource
                     @ site)
                  (Login.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp2MonadResource
                     @ site)
                  (Login.$s$fMonadBasebHandlerT_$s$fMonadResourceHandlerT_$cp3MonadResource
                     @ site)
                  (Login.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp4MonadResource
                     @ site)
                  (Yesod.Core.Types.$fMonadResourceHandlerT_$cliftResourceT
                     @ GHC.Types.IO
                     @ site
                     Control.Monad.IO.Class.$fMonadIOIO
                     Control.Monad.Base.$fMonadBaseIOIO
                     Control.Monad.Catch.$fMonadThrowIO) -}
a665edb494bcadf6164752431c88f51b
  $s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp1MonadResource ::
    Control.Monad.Catch.MonadThrow
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Login.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT -}
d05c90686afc111c5d74f8a38cdccff1
  $s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp2MonadResource ::
    Control.Monad.IO.Class.MonadIO
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Login.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT -}
7c1cad0baafeb1e4ef3765aa6114edaa
  $s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp4MonadResource ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Login.$s$fMonadBasebHandlerT -}
93149925bf401a43daf5e9ba4ea20b59
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Login.$trModule2 Login.$trModule1) -}
9a50a2c56be0d2e6e61cf5e8f86c687d
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Login"#) -}
cdc717917136b3ad9e61eaf32057ed5c
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
dfa6e90d79aff85910e70784208c6eac
  $wcdPasswordField ::
    Data.Text.Internal.Text
    -> Data.Text.Internal.Text
    -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Text.Internal.Text)
                   (w1 :: Data.Text.Internal.Text)
                   (w2 :: [(Data.Text.Internal.Text, Data.Text.Internal.Text)])
                   (w3 :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                 let {
                   x :: GHC.Prim.State# GHC.Prim.RealWorld
                        -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                              ((),
                               Yesod.Core.Types.GWData
                                 (Yesod.Routes.Class.Route
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.WidgetT
                                          Foundation.Sitio GHC.Types.IO)))) #)
                     {- Arity: 1, Strictness: <S,U>,
                        Unfolding: InlineRule (1, True, False)
                                   (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                    let {
                                      eta9 :: Text.Blaze.Internal.ChoiceString
                                      = Text.Blaze.Internal.Text w
                                    } in
                                    let {
                                      eta10 :: Text.Blaze.Html.Html
                                      = Text.Blaze.Internal.Content @ () eta9
                                    } in
                                    (# s,
                                       (GHC.Tuple.(),
                                        (Yesod.Core.Types.GWData
                                           @ (Yesod.Routes.Class.Route Foundation.Sitio)
                                           (\ (ds :: Yesod.Routes.Class.Route Foundation.Sitio
                                                     -> [(Data.Text.Internal.Text,
                                                          Data.Text.Internal.Text)]
                                                     -> Data.Text.Internal.Text) ->
                                            eta10)
                                             `cast`
                                           (Sym (Yesod.Core.Types.N:Body[0]
                                                     <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                                           (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                             `cast`
                                           (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                                           (GHC.Base.id
                                              @ [Yesod.Core.Types.Script
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)])
                                             `cast`
                                           (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                     <Yesod.Core.Types.Script
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Sitio)>_R))
                                           (GHC.Base.id
                                              @ [Yesod.Core.Types.Stylesheet
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)])
                                             `cast`
                                           (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                     <Yesod.Core.Types.Stylesheet
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Sitio)>_R))
                                           (Data.Map.Base.Tip
                                              @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                              @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                                  -> [(Data.Text.Internal.Text,
                                                       Data.Text.Internal.Text)]
                                                  -> Data.Text.Internal.Text)
                                                 -> Data.Text.Internal.Builder.Builder))
                                           (GHC.Base.Nothing
                                              @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                                  -> [(Data.Text.Internal.Text,
                                                       Data.Text.Internal.Text)]
                                                  -> Data.Text.Internal.Text)
                                                 -> Text.Julius.Javascript))
                                           (Yesod.Core.Types.$fApplicativeWidgetT2
                                              @ (Yesod.Routes.Class.Route Foundation.Sitio))
                                             `cast`
                                           (Sym (Yesod.Core.Types.N:Head[0]
                                                     <Yesod.Routes.Class.Route
                                                        Foundation.Sitio>_R)))
                                          `cast`
                                        (Yesod.Core.Types.GWData
                                           (Yesod.Routes.Class.Route
                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                        <GHC.Types.IO>_N
                                                        <Foundation.Sitio>_N)))_R)_R) #)) -}
                   = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     let {
                       eta9 :: Text.Blaze.Internal.ChoiceString
                       = Text.Blaze.Internal.Text w
                     } in
                     let {
                       eta10 :: Text.Blaze.Html.Html
                       = Text.Blaze.Internal.Content @ () eta9
                     } in
                     (# s,
                        (GHC.Tuple.(),
                         (Yesod.Core.Types.GWData
                            @ (Yesod.Routes.Class.Route Foundation.Sitio)
                            (\ (ds :: Yesod.Routes.Class.Route Foundation.Sitio
                                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                      -> Data.Text.Internal.Text) ->
                             eta10)
                              `cast`
                            (Sym (Yesod.Core.Types.N:Body[0]
                                      <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                            (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                              `cast`
                            (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Sitio)])
                              `cast`
                            (Sym (Yesod.Core.Types.N:UniqueList[0]
                                      <Yesod.Core.Types.Script
                                         (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Sitio)])
                              `cast`
                            (Sym (Yesod.Core.Types.N:UniqueList[0]
                                      <Yesod.Core.Types.Stylesheet
                                         (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                            (Data.Map.Base.Tip
                               @ (GHC.Base.Maybe Data.Text.Internal.Text)
                               @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Data.Text.Internal.Builder.Builder))
                            (GHC.Base.Nothing
                               @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Text.Julius.Javascript))
                            (Yesod.Core.Types.$fApplicativeWidgetT2
                               @ (Yesod.Routes.Class.Route Foundation.Sitio))
                              `cast`
                            (Sym (Yesod.Core.Types.N:Head[0]
                                      <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                           `cast`
                         (Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route
                               (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                         <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)
                 } in
                 let {
                   m3 :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                         -> GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                               ((),
                                Yesod.Core.Types.GWData
                                  (Yesod.Routes.Class.Route
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.WidgetT
                                           Foundation.Sitio GHC.Types.IO)))) #)
                     {- Arity: 2, Strictness: <L,A>,
                        Unfolding: InlineRule (1, True, True)
                                   (\ (eta9 :: Yesod.Core.Types.HandlerData
                                                 Foundation.Sitio
                                                 (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                                      (eta10 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                    x eta10) -}
                   = \ (eta9 :: Yesod.Core.Types.HandlerData
                                  Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                     x
                 } in
                 let {
                   x1 :: GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                               ((),
                                Yesod.Core.Types.GWData
                                  (Yesod.Routes.Class.Route
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.WidgetT
                                           Foundation.Sitio GHC.Types.IO)))) #)
                     {- Arity: 1, Strictness: <S,U>,
                        Unfolding: InlineRule (1, True, False)
                                   (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                    let {
                                      eta9 :: Text.Blaze.Internal.ChoiceString
                                      = Text.Blaze.Internal.Text w1
                                    } in
                                    let {
                                      eta10 :: Text.Blaze.Html.Html
                                      = Text.Blaze.Internal.Content @ () eta9
                                    } in
                                    (# s,
                                       (GHC.Tuple.(),
                                        (Yesod.Core.Types.GWData
                                           @ (Yesod.Routes.Class.Route Foundation.Sitio)
                                           (\ (ds :: Yesod.Routes.Class.Route Foundation.Sitio
                                                     -> [(Data.Text.Internal.Text,
                                                          Data.Text.Internal.Text)]
                                                     -> Data.Text.Internal.Text) ->
                                            eta10)
                                             `cast`
                                           (Sym (Yesod.Core.Types.N:Body[0]
                                                     <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                                           (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                             `cast`
                                           (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                                           (GHC.Base.id
                                              @ [Yesod.Core.Types.Script
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)])
                                             `cast`
                                           (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                     <Yesod.Core.Types.Script
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Sitio)>_R))
                                           (GHC.Base.id
                                              @ [Yesod.Core.Types.Stylesheet
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)])
                                             `cast`
                                           (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                     <Yesod.Core.Types.Stylesheet
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Sitio)>_R))
                                           (Data.Map.Base.Tip
                                              @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                              @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                                  -> [(Data.Text.Internal.Text,
                                                       Data.Text.Internal.Text)]
                                                  -> Data.Text.Internal.Text)
                                                 -> Data.Text.Internal.Builder.Builder))
                                           (GHC.Base.Nothing
                                              @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                                  -> [(Data.Text.Internal.Text,
                                                       Data.Text.Internal.Text)]
                                                  -> Data.Text.Internal.Text)
                                                 -> Text.Julius.Javascript))
                                           (Yesod.Core.Types.$fApplicativeWidgetT2
                                              @ (Yesod.Routes.Class.Route Foundation.Sitio))
                                             `cast`
                                           (Sym (Yesod.Core.Types.N:Head[0]
                                                     <Yesod.Routes.Class.Route
                                                        Foundation.Sitio>_R)))
                                          `cast`
                                        (Yesod.Core.Types.GWData
                                           (Yesod.Routes.Class.Route
                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                        <GHC.Types.IO>_N
                                                        <Foundation.Sitio>_N)))_R)_R) #)) -}
                   = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     let {
                       eta9 :: Text.Blaze.Internal.ChoiceString
                       = Text.Blaze.Internal.Text w1
                     } in
                     let {
                       eta10 :: Text.Blaze.Html.Html
                       = Text.Blaze.Internal.Content @ () eta9
                     } in
                     (# s,
                        (GHC.Tuple.(),
                         (Yesod.Core.Types.GWData
                            @ (Yesod.Routes.Class.Route Foundation.Sitio)
                            (\ (ds :: Yesod.Routes.Class.Route Foundation.Sitio
                                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                      -> Data.Text.Internal.Text) ->
                             eta10)
                              `cast`
                            (Sym (Yesod.Core.Types.N:Body[0]
                                      <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                            (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                              `cast`
                            (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Sitio)])
                              `cast`
                            (Sym (Yesod.Core.Types.N:UniqueList[0]
                                      <Yesod.Core.Types.Script
                                         (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Sitio)])
                              `cast`
                            (Sym (Yesod.Core.Types.N:UniqueList[0]
                                      <Yesod.Core.Types.Stylesheet
                                         (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                            (Data.Map.Base.Tip
                               @ (GHC.Base.Maybe Data.Text.Internal.Text)
                               @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Data.Text.Internal.Builder.Builder))
                            (GHC.Base.Nothing
                               @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Text.Julius.Javascript))
                            (Yesod.Core.Types.$fApplicativeWidgetT2
                               @ (Yesod.Routes.Class.Route Foundation.Sitio))
                              `cast`
                            (Sym (Yesod.Core.Types.N:Head[0]
                                      <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                           `cast`
                         (Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route
                               (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                         <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)
                 } in
                 let {
                   m4 :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                         -> GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                               ((),
                                Yesod.Core.Types.GWData
                                  (Yesod.Routes.Class.Route
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.WidgetT
                                           Foundation.Sitio GHC.Types.IO)))) #)
                     {- Arity: 2, Strictness: <L,A>,
                        Unfolding: InlineRule (1, True, True)
                                   (\ (eta9 :: Yesod.Core.Types.HandlerData
                                                 Foundation.Sitio
                                                 (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                                      (eta10 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                    x1 eta10) -}
                   = \ (eta9 :: Yesod.Core.Types.HandlerData
                                  Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                     x1
                 } in
                 let {
                   x2 :: GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                               ((),
                                Yesod.Core.Types.GWData
                                  (Yesod.Routes.Class.Route
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.WidgetT
                                           Foundation.Sitio GHC.Types.IO)))) #)
                     {- Arity: 1, Strictness: <S,U>,
                        Unfolding: InlineRule (1, True, False)
                                   (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                    let {
                                      eta9 :: Text.Blaze.Html.Html = Text.Hamlet.attrsToHtml_go w2
                                    } in
                                    (# s,
                                       (GHC.Tuple.(),
                                        (Yesod.Core.Types.GWData
                                           @ (Yesod.Routes.Class.Route Foundation.Sitio)
                                           (\ (ds :: Yesod.Routes.Class.Route Foundation.Sitio
                                                     -> [(Data.Text.Internal.Text,
                                                          Data.Text.Internal.Text)]
                                                     -> Data.Text.Internal.Text) ->
                                            eta9)
                                             `cast`
                                           (Sym (Yesod.Core.Types.N:Body[0]
                                                     <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                                           (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                             `cast`
                                           (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                                           (GHC.Base.id
                                              @ [Yesod.Core.Types.Script
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)])
                                             `cast`
                                           (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                     <Yesod.Core.Types.Script
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Sitio)>_R))
                                           (GHC.Base.id
                                              @ [Yesod.Core.Types.Stylesheet
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)])
                                             `cast`
                                           (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                     <Yesod.Core.Types.Stylesheet
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Sitio)>_R))
                                           (Data.Map.Base.Tip
                                              @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                              @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                                  -> [(Data.Text.Internal.Text,
                                                       Data.Text.Internal.Text)]
                                                  -> Data.Text.Internal.Text)
                                                 -> Data.Text.Internal.Builder.Builder))
                                           (GHC.Base.Nothing
                                              @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                                  -> [(Data.Text.Internal.Text,
                                                       Data.Text.Internal.Text)]
                                                  -> Data.Text.Internal.Text)
                                                 -> Text.Julius.Javascript))
                                           (Yesod.Core.Types.$fApplicativeWidgetT2
                                              @ (Yesod.Routes.Class.Route Foundation.Sitio))
                                             `cast`
                                           (Sym (Yesod.Core.Types.N:Head[0]
                                                     <Yesod.Routes.Class.Route
                                                        Foundation.Sitio>_R)))
                                          `cast`
                                        (Yesod.Core.Types.GWData
                                           (Yesod.Routes.Class.Route
                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                        <GHC.Types.IO>_N
                                                        <Foundation.Sitio>_N)))_R)_R) #)) -}
                   = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     let {
                       eta9 :: Text.Blaze.Html.Html = Text.Hamlet.attrsToHtml_go w2
                     } in
                     (# s,
                        (GHC.Tuple.(),
                         (Yesod.Core.Types.GWData
                            @ (Yesod.Routes.Class.Route Foundation.Sitio)
                            (\ (ds :: Yesod.Routes.Class.Route Foundation.Sitio
                                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                      -> Data.Text.Internal.Text) ->
                             eta9)
                              `cast`
                            (Sym (Yesod.Core.Types.N:Body[0]
                                      <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                            (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                              `cast`
                            (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Sitio)])
                              `cast`
                            (Sym (Yesod.Core.Types.N:UniqueList[0]
                                      <Yesod.Core.Types.Script
                                         (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Sitio)])
                              `cast`
                            (Sym (Yesod.Core.Types.N:UniqueList[0]
                                      <Yesod.Core.Types.Stylesheet
                                         (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                            (Data.Map.Base.Tip
                               @ (GHC.Base.Maybe Data.Text.Internal.Text)
                               @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Data.Text.Internal.Builder.Builder))
                            (GHC.Base.Nothing
                               @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Text.Julius.Javascript))
                            (Yesod.Core.Types.$fApplicativeWidgetT2
                               @ (Yesod.Routes.Class.Route Foundation.Sitio))
                              `cast`
                            (Sym (Yesod.Core.Types.N:Head[0]
                                      <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                           `cast`
                         (Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route
                               (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                         <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)
                 } in
                 let {
                   m5 :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                         -> GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                               ((),
                                Yesod.Core.Types.GWData
                                  (Yesod.Routes.Class.Route
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.WidgetT
                                           Foundation.Sitio GHC.Types.IO)))) #)
                     {- Arity: 2, Strictness: <L,A>,
                        Unfolding: InlineRule (1, True, True)
                                   (\ (eta9 :: Yesod.Core.Types.HandlerData
                                                 Foundation.Sitio
                                                 (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                                      (eta10 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                    x2 eta10) -}
                   = \ (eta9 :: Yesod.Core.Types.HandlerData
                                  Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                     x2
                 } in
                 let {
                   lvl49 :: ()
                            -> Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                            -> GHC.Types.IO
                                 ((),
                                  Yesod.Core.Types.GWData
                                    (Yesod.Routes.Class.Route Foundation.Sitio))
                     {- Arity: 2 -}
                   = \ (ds :: ())
                       (eta9 :: Yesod.Core.Types.HandlerData
                                  Foundation.Sitio
                                  (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                     Yesod.Core.Types.$fApplicativeWidgetT3
                       @ GHC.Types.IO
                       @ Foundation.Sitio
                       GHC.Base.$fMonadIO
                       @ ()
                       @ ()
                       m5
                         `cast`
                       (Trans
                            (<Yesod.Core.Types.HandlerData
                                Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                             ->_R Sym (GHC.Types.N:IO[0]
                                           ((,)
                                              <()>_R
                                              (Yesod.Core.Types.GWData
                                                 (Yesod.Routes.Class.Route
                                                    (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                              <GHC.Types.IO>_N
                                                              <Foundation.Sitio>_N)))_R)_R)_R))
                            (Sym (Yesod.Core.Types.N:WidgetT[0]
                                      <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                       Login.cdPasswordField17
                         `cast`
                       (<()>_R
                        ->_R Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.N:IO[0]
                                                ((,)
                                                   <()>_R
                                                   (Yesod.Core.Types.GWData
                                                      (Yesod.Routes.Class.Route
                                                         (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                   <GHC.Types.IO>_N
                                                                   <Foundation.Sitio>_N)))_R)_R)_R))
                                 (Sym (Yesod.Core.Types.N:WidgetT[0]
                                           <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                       eta9
                 } in
                 let {
                   lvl50 :: ()
                            -> Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                            -> GHC.Types.IO
                                 ((),
                                  Yesod.Core.Types.GWData
                                    (Yesod.Routes.Class.Route Foundation.Sitio))
                     {- Arity: 2 -}
                   = \ (ds :: ())
                       (eta9 :: Yesod.Core.Types.HandlerData
                                  Foundation.Sitio
                                  (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                     Yesod.Core.Types.$fApplicativeWidgetT3
                       @ GHC.Types.IO
                       @ Foundation.Sitio
                       GHC.Base.$fMonadIO
                       @ ()
                       @ ()
                       Login.cdPasswordField12
                         `cast`
                       (Trans
                            (<Yesod.Core.Types.HandlerData
                                Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                             ->_R Sym (GHC.Types.N:IO[0]
                                           ((,)
                                              <()>_R
                                              (Yesod.Core.Types.GWData
                                                 (Yesod.Routes.Class.Route
                                                    (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                              <GHC.Types.IO>_N
                                                              <Foundation.Sitio>_N)))_R)_R)_R))
                            (Sym (Yesod.Core.Types.N:WidgetT[0]
                                      <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                       lvl49
                         `cast`
                       (<()>_R
                        ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                      <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                       eta9
                 } in
                 let {
                   lvl51 :: ()
                            -> Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                            -> GHC.Types.IO
                                 ((),
                                  Yesod.Core.Types.GWData
                                    (Yesod.Routes.Class.Route Foundation.Sitio))
                     {- Arity: 2 -}
                   = \ (ds :: ())
                       (eta9 :: Yesod.Core.Types.HandlerData
                                  Foundation.Sitio
                                  (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                     Yesod.Core.Types.$fApplicativeWidgetT3
                       @ GHC.Types.IO
                       @ Foundation.Sitio
                       GHC.Base.$fMonadIO
                       @ ()
                       @ ()
                       m4
                         `cast`
                       (Trans
                            (<Yesod.Core.Types.HandlerData
                                Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                             ->_R Sym (GHC.Types.N:IO[0]
                                           ((,)
                                              <()>_R
                                              (Yesod.Core.Types.GWData
                                                 (Yesod.Routes.Class.Route
                                                    (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                              <GHC.Types.IO>_N
                                                              <Foundation.Sitio>_N)))_R)_R)_R))
                            (Sym (Yesod.Core.Types.N:WidgetT[0]
                                      <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                       lvl50
                         `cast`
                       (<()>_R
                        ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                      <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                       eta9
                 } in
                 let {
                   lvl52 :: ()
                            -> Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                            -> GHC.Types.IO
                                 ((),
                                  Yesod.Core.Types.GWData
                                    (Yesod.Routes.Class.Route Foundation.Sitio))
                     {- Arity: 2 -}
                   = \ (ds :: ())
                       (eta9 :: Yesod.Core.Types.HandlerData
                                  Foundation.Sitio
                                  (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                     Yesod.Core.Types.$fApplicativeWidgetT3
                       @ GHC.Types.IO
                       @ Foundation.Sitio
                       GHC.Base.$fMonadIO
                       @ ()
                       @ ()
                       Login.cdPasswordField7
                         `cast`
                       (Trans
                            (<Yesod.Core.Types.HandlerData
                                Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                             ->_R Sym (GHC.Types.N:IO[0]
                                           ((,)
                                              <()>_R
                                              (Yesod.Core.Types.GWData
                                                 (Yesod.Routes.Class.Route
                                                    (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                              <GHC.Types.IO>_N
                                                              <Foundation.Sitio>_N)))_R)_R)_R))
                            (Sym (Yesod.Core.Types.N:WidgetT[0]
                                      <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                       lvl51
                         `cast`
                       (<()>_R
                        ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                      <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                       eta9
                 } in
                 Yesod.Core.Types.$fApplicativeWidgetT3
                   @ GHC.Types.IO
                   @ Foundation.Sitio
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Login.cdPasswordField2
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       ((,)
                                          <()>_R
                                          (Yesod.Core.Types.GWData
                                             (Yesod.Routes.Class.Route
                                                (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                          <GHC.Types.IO>_N
                                                          <Foundation.Sitio>_N)))_R)_R)_R))
                        (Sym (Yesod.Core.Types.N:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                   (\ (ds :: ())
                      (eta9 :: Yesod.Core.Types.HandlerData
                                 Foundation.Sitio
                                 (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                    Yesod.Core.Types.$fApplicativeWidgetT3
                      @ GHC.Types.IO
                      @ Foundation.Sitio
                      GHC.Base.$fMonadIO
                      @ ()
                      @ ()
                      m3
                        `cast`
                      (Trans
                           (<Yesod.Core.Types.HandlerData
                               Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                            ->_R Sym (GHC.Types.N:IO[0]
                                          ((,)
                                             <()>_R
                                             (Yesod.Core.Types.GWData
                                                (Yesod.Routes.Class.Route
                                                   (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                             <GHC.Types.IO>_N
                                                             <Foundation.Sitio>_N)))_R)_R)_R))
                           (Sym (Yesod.Core.Types.N:WidgetT[0]
                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                      lvl52
                        `cast`
                      (<()>_R
                       ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                      eta9)
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                   w3) -}
73de7ea940495e121928d1aeac7f8886
  $wnmUsuarioField ::
    Data.Text.Internal.Text
    -> Data.Text.Internal.Text
    -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Data.Text.Internal.Text)
                   (w1 :: Data.Text.Internal.Text)
                   (w2 :: [(Data.Text.Internal.Text, Data.Text.Internal.Text)])
                   (w3 :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                 let {
                   x :: GHC.Prim.State# GHC.Prim.RealWorld
                        -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                              ((),
                               Yesod.Core.Types.GWData
                                 (Yesod.Routes.Class.Route
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.WidgetT
                                          Foundation.Sitio GHC.Types.IO)))) #)
                     {- Arity: 1, Strictness: <S,U>,
                        Unfolding: InlineRule (1, True, False)
                                   (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                    let {
                                      eta9 :: Text.Blaze.Internal.ChoiceString
                                      = Text.Blaze.Internal.Text w
                                    } in
                                    let {
                                      eta10 :: Text.Blaze.Html.Html
                                      = Text.Blaze.Internal.Content @ () eta9
                                    } in
                                    (# s,
                                       (GHC.Tuple.(),
                                        (Yesod.Core.Types.GWData
                                           @ (Yesod.Routes.Class.Route Foundation.Sitio)
                                           (\ (ds :: Yesod.Routes.Class.Route Foundation.Sitio
                                                     -> [(Data.Text.Internal.Text,
                                                          Data.Text.Internal.Text)]
                                                     -> Data.Text.Internal.Text) ->
                                            eta10)
                                             `cast`
                                           (Sym (Yesod.Core.Types.N:Body[0]
                                                     <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                                           (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                             `cast`
                                           (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                                           (GHC.Base.id
                                              @ [Yesod.Core.Types.Script
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)])
                                             `cast`
                                           (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                     <Yesod.Core.Types.Script
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Sitio)>_R))
                                           (GHC.Base.id
                                              @ [Yesod.Core.Types.Stylesheet
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)])
                                             `cast`
                                           (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                     <Yesod.Core.Types.Stylesheet
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Sitio)>_R))
                                           (Data.Map.Base.Tip
                                              @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                              @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                                  -> [(Data.Text.Internal.Text,
                                                       Data.Text.Internal.Text)]
                                                  -> Data.Text.Internal.Text)
                                                 -> Data.Text.Internal.Builder.Builder))
                                           (GHC.Base.Nothing
                                              @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                                  -> [(Data.Text.Internal.Text,
                                                       Data.Text.Internal.Text)]
                                                  -> Data.Text.Internal.Text)
                                                 -> Text.Julius.Javascript))
                                           (Yesod.Core.Types.$fApplicativeWidgetT2
                                              @ (Yesod.Routes.Class.Route Foundation.Sitio))
                                             `cast`
                                           (Sym (Yesod.Core.Types.N:Head[0]
                                                     <Yesod.Routes.Class.Route
                                                        Foundation.Sitio>_R)))
                                          `cast`
                                        (Yesod.Core.Types.GWData
                                           (Yesod.Routes.Class.Route
                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                        <GHC.Types.IO>_N
                                                        <Foundation.Sitio>_N)))_R)_R) #)) -}
                   = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     let {
                       eta9 :: Text.Blaze.Internal.ChoiceString
                       = Text.Blaze.Internal.Text w
                     } in
                     let {
                       eta10 :: Text.Blaze.Html.Html
                       = Text.Blaze.Internal.Content @ () eta9
                     } in
                     (# s,
                        (GHC.Tuple.(),
                         (Yesod.Core.Types.GWData
                            @ (Yesod.Routes.Class.Route Foundation.Sitio)
                            (\ (ds :: Yesod.Routes.Class.Route Foundation.Sitio
                                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                      -> Data.Text.Internal.Text) ->
                             eta10)
                              `cast`
                            (Sym (Yesod.Core.Types.N:Body[0]
                                      <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                            (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                              `cast`
                            (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Sitio)])
                              `cast`
                            (Sym (Yesod.Core.Types.N:UniqueList[0]
                                      <Yesod.Core.Types.Script
                                         (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Sitio)])
                              `cast`
                            (Sym (Yesod.Core.Types.N:UniqueList[0]
                                      <Yesod.Core.Types.Stylesheet
                                         (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                            (Data.Map.Base.Tip
                               @ (GHC.Base.Maybe Data.Text.Internal.Text)
                               @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Data.Text.Internal.Builder.Builder))
                            (GHC.Base.Nothing
                               @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Text.Julius.Javascript))
                            (Yesod.Core.Types.$fApplicativeWidgetT2
                               @ (Yesod.Routes.Class.Route Foundation.Sitio))
                              `cast`
                            (Sym (Yesod.Core.Types.N:Head[0]
                                      <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                           `cast`
                         (Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route
                               (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                         <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)
                 } in
                 let {
                   m3 :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                         -> GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                               ((),
                                Yesod.Core.Types.GWData
                                  (Yesod.Routes.Class.Route
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.WidgetT
                                           Foundation.Sitio GHC.Types.IO)))) #)
                     {- Arity: 2, Strictness: <L,A>,
                        Unfolding: InlineRule (1, True, True)
                                   (\ (eta9 :: Yesod.Core.Types.HandlerData
                                                 Foundation.Sitio
                                                 (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                                      (eta10 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                    x eta10) -}
                   = \ (eta9 :: Yesod.Core.Types.HandlerData
                                  Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                     x
                 } in
                 let {
                   x1 :: GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                               ((),
                                Yesod.Core.Types.GWData
                                  (Yesod.Routes.Class.Route
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.WidgetT
                                           Foundation.Sitio GHC.Types.IO)))) #)
                     {- Arity: 1, Strictness: <S,U>,
                        Unfolding: InlineRule (1, True, False)
                                   (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                    let {
                                      eta9 :: Text.Blaze.Internal.ChoiceString
                                      = Text.Blaze.Internal.Text w1
                                    } in
                                    let {
                                      eta10 :: Text.Blaze.Html.Html
                                      = Text.Blaze.Internal.Content @ () eta9
                                    } in
                                    (# s,
                                       (GHC.Tuple.(),
                                        (Yesod.Core.Types.GWData
                                           @ (Yesod.Routes.Class.Route Foundation.Sitio)
                                           (\ (ds :: Yesod.Routes.Class.Route Foundation.Sitio
                                                     -> [(Data.Text.Internal.Text,
                                                          Data.Text.Internal.Text)]
                                                     -> Data.Text.Internal.Text) ->
                                            eta10)
                                             `cast`
                                           (Sym (Yesod.Core.Types.N:Body[0]
                                                     <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                                           (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                             `cast`
                                           (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                                           (GHC.Base.id
                                              @ [Yesod.Core.Types.Script
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)])
                                             `cast`
                                           (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                     <Yesod.Core.Types.Script
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Sitio)>_R))
                                           (GHC.Base.id
                                              @ [Yesod.Core.Types.Stylesheet
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)])
                                             `cast`
                                           (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                     <Yesod.Core.Types.Stylesheet
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Sitio)>_R))
                                           (Data.Map.Base.Tip
                                              @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                              @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                                  -> [(Data.Text.Internal.Text,
                                                       Data.Text.Internal.Text)]
                                                  -> Data.Text.Internal.Text)
                                                 -> Data.Text.Internal.Builder.Builder))
                                           (GHC.Base.Nothing
                                              @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                                  -> [(Data.Text.Internal.Text,
                                                       Data.Text.Internal.Text)]
                                                  -> Data.Text.Internal.Text)
                                                 -> Text.Julius.Javascript))
                                           (Yesod.Core.Types.$fApplicativeWidgetT2
                                              @ (Yesod.Routes.Class.Route Foundation.Sitio))
                                             `cast`
                                           (Sym (Yesod.Core.Types.N:Head[0]
                                                     <Yesod.Routes.Class.Route
                                                        Foundation.Sitio>_R)))
                                          `cast`
                                        (Yesod.Core.Types.GWData
                                           (Yesod.Routes.Class.Route
                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                        <GHC.Types.IO>_N
                                                        <Foundation.Sitio>_N)))_R)_R) #)) -}
                   = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     let {
                       eta9 :: Text.Blaze.Internal.ChoiceString
                       = Text.Blaze.Internal.Text w1
                     } in
                     let {
                       eta10 :: Text.Blaze.Html.Html
                       = Text.Blaze.Internal.Content @ () eta9
                     } in
                     (# s,
                        (GHC.Tuple.(),
                         (Yesod.Core.Types.GWData
                            @ (Yesod.Routes.Class.Route Foundation.Sitio)
                            (\ (ds :: Yesod.Routes.Class.Route Foundation.Sitio
                                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                      -> Data.Text.Internal.Text) ->
                             eta10)
                              `cast`
                            (Sym (Yesod.Core.Types.N:Body[0]
                                      <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                            (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                              `cast`
                            (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Sitio)])
                              `cast`
                            (Sym (Yesod.Core.Types.N:UniqueList[0]
                                      <Yesod.Core.Types.Script
                                         (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Sitio)])
                              `cast`
                            (Sym (Yesod.Core.Types.N:UniqueList[0]
                                      <Yesod.Core.Types.Stylesheet
                                         (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                            (Data.Map.Base.Tip
                               @ (GHC.Base.Maybe Data.Text.Internal.Text)
                               @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Data.Text.Internal.Builder.Builder))
                            (GHC.Base.Nothing
                               @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Text.Julius.Javascript))
                            (Yesod.Core.Types.$fApplicativeWidgetT2
                               @ (Yesod.Routes.Class.Route Foundation.Sitio))
                              `cast`
                            (Sym (Yesod.Core.Types.N:Head[0]
                                      <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                           `cast`
                         (Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route
                               (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                         <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)
                 } in
                 let {
                   m4 :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                         -> GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                               ((),
                                Yesod.Core.Types.GWData
                                  (Yesod.Routes.Class.Route
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.WidgetT
                                           Foundation.Sitio GHC.Types.IO)))) #)
                     {- Arity: 2, Strictness: <L,A>,
                        Unfolding: InlineRule (1, True, True)
                                   (\ (eta9 :: Yesod.Core.Types.HandlerData
                                                 Foundation.Sitio
                                                 (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                                      (eta10 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                    x1 eta10) -}
                   = \ (eta9 :: Yesod.Core.Types.HandlerData
                                  Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                     x1
                 } in
                 let {
                   x2 :: GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                               ((),
                                Yesod.Core.Types.GWData
                                  (Yesod.Routes.Class.Route
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.WidgetT
                                           Foundation.Sitio GHC.Types.IO)))) #)
                     {- Arity: 1, Strictness: <S,U>,
                        Unfolding: InlineRule (1, True, False)
                                   (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                    let {
                                      eta9 :: Text.Blaze.Html.Html = Text.Hamlet.attrsToHtml_go w2
                                    } in
                                    (# s,
                                       (GHC.Tuple.(),
                                        (Yesod.Core.Types.GWData
                                           @ (Yesod.Routes.Class.Route Foundation.Sitio)
                                           (\ (ds :: Yesod.Routes.Class.Route Foundation.Sitio
                                                     -> [(Data.Text.Internal.Text,
                                                          Data.Text.Internal.Text)]
                                                     -> Data.Text.Internal.Text) ->
                                            eta9)
                                             `cast`
                                           (Sym (Yesod.Core.Types.N:Body[0]
                                                     <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                                           (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                             `cast`
                                           (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                                           (GHC.Base.id
                                              @ [Yesod.Core.Types.Script
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)])
                                             `cast`
                                           (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                     <Yesod.Core.Types.Script
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Sitio)>_R))
                                           (GHC.Base.id
                                              @ [Yesod.Core.Types.Stylesheet
                                                   (Yesod.Routes.Class.Route Foundation.Sitio)])
                                             `cast`
                                           (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                     <Yesod.Core.Types.Stylesheet
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Sitio)>_R))
                                           (Data.Map.Base.Tip
                                              @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                              @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                                  -> [(Data.Text.Internal.Text,
                                                       Data.Text.Internal.Text)]
                                                  -> Data.Text.Internal.Text)
                                                 -> Data.Text.Internal.Builder.Builder))
                                           (GHC.Base.Nothing
                                              @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                                  -> [(Data.Text.Internal.Text,
                                                       Data.Text.Internal.Text)]
                                                  -> Data.Text.Internal.Text)
                                                 -> Text.Julius.Javascript))
                                           (Yesod.Core.Types.$fApplicativeWidgetT2
                                              @ (Yesod.Routes.Class.Route Foundation.Sitio))
                                             `cast`
                                           (Sym (Yesod.Core.Types.N:Head[0]
                                                     <Yesod.Routes.Class.Route
                                                        Foundation.Sitio>_R)))
                                          `cast`
                                        (Yesod.Core.Types.GWData
                                           (Yesod.Routes.Class.Route
                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                        <GHC.Types.IO>_N
                                                        <Foundation.Sitio>_N)))_R)_R) #)) -}
                   = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     let {
                       eta9 :: Text.Blaze.Html.Html = Text.Hamlet.attrsToHtml_go w2
                     } in
                     (# s,
                        (GHC.Tuple.(),
                         (Yesod.Core.Types.GWData
                            @ (Yesod.Routes.Class.Route Foundation.Sitio)
                            (\ (ds :: Yesod.Routes.Class.Route Foundation.Sitio
                                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                      -> Data.Text.Internal.Text) ->
                             eta9)
                              `cast`
                            (Sym (Yesod.Core.Types.N:Body[0]
                                      <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                            (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                              `cast`
                            (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Sitio)])
                              `cast`
                            (Sym (Yesod.Core.Types.N:UniqueList[0]
                                      <Yesod.Core.Types.Script
                                         (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                            (GHC.Base.id
                               @ [Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Sitio)])
                              `cast`
                            (Sym (Yesod.Core.Types.N:UniqueList[0]
                                      <Yesod.Core.Types.Stylesheet
                                         (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                            (Data.Map.Base.Tip
                               @ (GHC.Base.Maybe Data.Text.Internal.Text)
                               @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Data.Text.Internal.Builder.Builder))
                            (GHC.Base.Nothing
                               @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                   -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                   -> Data.Text.Internal.Text)
                                  -> Text.Julius.Javascript))
                            (Yesod.Core.Types.$fApplicativeWidgetT2
                               @ (Yesod.Routes.Class.Route Foundation.Sitio))
                              `cast`
                            (Sym (Yesod.Core.Types.N:Head[0]
                                      <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                           `cast`
                         (Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route
                               (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                         <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)
                 } in
                 let {
                   m5 :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                         -> GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                               ((),
                                Yesod.Core.Types.GWData
                                  (Yesod.Routes.Class.Route
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.WidgetT
                                           Foundation.Sitio GHC.Types.IO)))) #)
                     {- Arity: 2, Strictness: <L,A>,
                        Unfolding: InlineRule (1, True, True)
                                   (\ (eta9 :: Yesod.Core.Types.HandlerData
                                                 Foundation.Sitio
                                                 (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                                      (eta10 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                    x2 eta10) -}
                   = \ (eta9 :: Yesod.Core.Types.HandlerData
                                  Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                     x2
                 } in
                 let {
                   lvl49 :: ()
                            -> Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                            -> GHC.Types.IO
                                 ((),
                                  Yesod.Core.Types.GWData
                                    (Yesod.Routes.Class.Route Foundation.Sitio))
                     {- Arity: 2 -}
                   = \ (ds :: ())
                       (eta9 :: Yesod.Core.Types.HandlerData
                                  Foundation.Sitio
                                  (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                     Yesod.Core.Types.$fApplicativeWidgetT3
                       @ GHC.Types.IO
                       @ Foundation.Sitio
                       GHC.Base.$fMonadIO
                       @ ()
                       @ ()
                       m5
                         `cast`
                       (Trans
                            (<Yesod.Core.Types.HandlerData
                                Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                             ->_R Sym (GHC.Types.N:IO[0]
                                           ((,)
                                              <()>_R
                                              (Yesod.Core.Types.GWData
                                                 (Yesod.Routes.Class.Route
                                                    (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                              <GHC.Types.IO>_N
                                                              <Foundation.Sitio>_N)))_R)_R)_R))
                            (Sym (Yesod.Core.Types.N:WidgetT[0]
                                      <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                       Login.cdPasswordField17
                         `cast`
                       (<()>_R
                        ->_R Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.N:IO[0]
                                                ((,)
                                                   <()>_R
                                                   (Yesod.Core.Types.GWData
                                                      (Yesod.Routes.Class.Route
                                                         (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                   <GHC.Types.IO>_N
                                                                   <Foundation.Sitio>_N)))_R)_R)_R))
                                 (Sym (Yesod.Core.Types.N:WidgetT[0]
                                           <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                       eta9
                 } in
                 let {
                   lvl50 :: ()
                            -> Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                            -> GHC.Types.IO
                                 ((),
                                  Yesod.Core.Types.GWData
                                    (Yesod.Routes.Class.Route Foundation.Sitio))
                     {- Arity: 2 -}
                   = \ (ds :: ())
                       (eta9 :: Yesod.Core.Types.HandlerData
                                  Foundation.Sitio
                                  (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                     Yesod.Core.Types.$fApplicativeWidgetT3
                       @ GHC.Types.IO
                       @ Foundation.Sitio
                       GHC.Base.$fMonadIO
                       @ ()
                       @ ()
                       Login.nmUsuarioField7
                         `cast`
                       (Trans
                            (<Yesod.Core.Types.HandlerData
                                Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                             ->_R Sym (GHC.Types.N:IO[0]
                                           ((,)
                                              <()>_R
                                              (Yesod.Core.Types.GWData
                                                 (Yesod.Routes.Class.Route
                                                    (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                              <GHC.Types.IO>_N
                                                              <Foundation.Sitio>_N)))_R)_R)_R))
                            (Sym (Yesod.Core.Types.N:WidgetT[0]
                                      <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                       lvl49
                         `cast`
                       (<()>_R
                        ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                      <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                       eta9
                 } in
                 let {
                   lvl51 :: ()
                            -> Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                            -> GHC.Types.IO
                                 ((),
                                  Yesod.Core.Types.GWData
                                    (Yesod.Routes.Class.Route Foundation.Sitio))
                     {- Arity: 2 -}
                   = \ (ds :: ())
                       (eta9 :: Yesod.Core.Types.HandlerData
                                  Foundation.Sitio
                                  (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                     Yesod.Core.Types.$fApplicativeWidgetT3
                       @ GHC.Types.IO
                       @ Foundation.Sitio
                       GHC.Base.$fMonadIO
                       @ ()
                       @ ()
                       m4
                         `cast`
                       (Trans
                            (<Yesod.Core.Types.HandlerData
                                Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                             ->_R Sym (GHC.Types.N:IO[0]
                                           ((,)
                                              <()>_R
                                              (Yesod.Core.Types.GWData
                                                 (Yesod.Routes.Class.Route
                                                    (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                              <GHC.Types.IO>_N
                                                              <Foundation.Sitio>_N)))_R)_R)_R))
                            (Sym (Yesod.Core.Types.N:WidgetT[0]
                                      <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                       lvl50
                         `cast`
                       (<()>_R
                        ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                      <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                       eta9
                 } in
                 let {
                   lvl52 :: ()
                            -> Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                            -> GHC.Types.IO
                                 ((),
                                  Yesod.Core.Types.GWData
                                    (Yesod.Routes.Class.Route Foundation.Sitio))
                     {- Arity: 2 -}
                   = \ (ds :: ())
                       (eta9 :: Yesod.Core.Types.HandlerData
                                  Foundation.Sitio
                                  (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                     Yesod.Core.Types.$fApplicativeWidgetT3
                       @ GHC.Types.IO
                       @ Foundation.Sitio
                       GHC.Base.$fMonadIO
                       @ ()
                       @ ()
                       Login.cdPasswordField7
                         `cast`
                       (Trans
                            (<Yesod.Core.Types.HandlerData
                                Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                             ->_R Sym (GHC.Types.N:IO[0]
                                           ((,)
                                              <()>_R
                                              (Yesod.Core.Types.GWData
                                                 (Yesod.Routes.Class.Route
                                                    (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                              <GHC.Types.IO>_N
                                                              <Foundation.Sitio>_N)))_R)_R)_R))
                            (Sym (Yesod.Core.Types.N:WidgetT[0]
                                      <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                       lvl51
                         `cast`
                       (<()>_R
                        ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                      <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                       eta9
                 } in
                 Yesod.Core.Types.$fApplicativeWidgetT3
                   @ GHC.Types.IO
                   @ Foundation.Sitio
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   Login.nmUsuarioField2
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       ((,)
                                          <()>_R
                                          (Yesod.Core.Types.GWData
                                             (Yesod.Routes.Class.Route
                                                (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                          <GHC.Types.IO>_N
                                                          <Foundation.Sitio>_N)))_R)_R)_R))
                        (Sym (Yesod.Core.Types.N:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                   (\ (ds :: ())
                      (eta9 :: Yesod.Core.Types.HandlerData
                                 Foundation.Sitio
                                 (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                    Yesod.Core.Types.$fApplicativeWidgetT3
                      @ GHC.Types.IO
                      @ Foundation.Sitio
                      GHC.Base.$fMonadIO
                      @ ()
                      @ ()
                      m3
                        `cast`
                      (Trans
                           (<Yesod.Core.Types.HandlerData
                               Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                            ->_R Sym (GHC.Types.N:IO[0]
                                          ((,)
                                             <()>_R
                                             (Yesod.Core.Types.GWData
                                                (Yesod.Routes.Class.Route
                                                   (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                             <GHC.Types.IO>_N
                                                             <Foundation.Sitio>_N)))_R)_R)_R))
                           (Sym (Yesod.Core.Types.N:WidgetT[0]
                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                      lvl52
                        `cast`
                      (<()>_R
                       ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                      eta9)
                     `cast`
                   (<()>_R
                    ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                   w3) -}
9b34a7975c030052c3f40990f418bf67
  cdPasswordField ::
    Yesod.Form.Types.Field Foundation.Handler Data.Text.Internal.Text
  {- Strictness: m,
     Unfolding: (Yesod.Form.Types.Field
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   Login.cdPasswordField24
                     `cast`
                   (<[Data.Text.Internal.Text]>_R
                    ->_R <[Yesod.Core.Types.FileInfo]>_R
                    ->_R Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Data.Either.Either
                                               (Text.Shakespeare.I18N.SomeMessage
                                                  (Yesod.Core.Class.Handler.HandlerSite
                                                     Foundation.Handler))
                                               (GHC.Base.Maybe Data.Text.Internal.Text)>_R))
                             (Sym (Yesod.Core.Types.N:HandlerT[0]
                                       <Foundation.Sitio>_N
                                       <GHC.Types.IO>_N
                                       <Data.Either.Either
                                          (Text.Shakespeare.I18N.SomeMessage
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                Foundation.Handler))
                                          (GHC.Base.Maybe Data.Text.Internal.Text)>_N)))
                   Login.cdPasswordField1
                     `cast`
                   (<Data.Text.Internal.Text>_R
                    ->_R <Data.Text.Internal.Text>_R
                    ->_R <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]>_R
                    ->_R <Data.Either.Either
                            Data.Text.Internal.Text Data.Text.Internal.Text>_R
                    ->_R <GHC.Types.Bool>_R
                    ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                  (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                       <GHC.Types.IO>_N <Foundation.Sitio>_N)
                                  <GHC.Types.IO>_N
                                  <()>_N))
                   Yesod.Form.Types.UrlEncoded) -}
f7f05e6ea314a234df5f1979b16215b3
  cdPasswordField1 ::
    Data.Text.Internal.Text
    -> Data.Text.Internal.Text
    -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
    -> Data.Either.Either
         Data.Text.Internal.Text Data.Text.Internal.Text
    -> GHC.Types.Bool
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 6, Strictness: <L,U><L,U><L,U><L,A><L,A><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (6, True, True)
                (\ (w :: Data.Text.Internal.Text)
                   (w1 :: Data.Text.Internal.Text)
                   (w2 :: [(Data.Text.Internal.Text, Data.Text.Internal.Text)])
                   (w3 :: Data.Either.Either
                            Data.Text.Internal.Text Data.Text.Internal.Text)
                   (w4 :: GHC.Types.Bool)
                   (w5 :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                 Login.$wcdPasswordField w w1 w2 w5) -}
b03d92f78066b51bce9c74654dcb9b33
  cdPasswordField10 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Login.cdPasswordField11) -}
eee11bbc7a7cd87d0743d7eb49304a92
  cdPasswordField11 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "-confirm\" name=\""#) -}
945f55f4154fe9b18644413630f67b13
  cdPasswordField12 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta9 :: Yesod.Core.Types.HandlerData
                              Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta10 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Login.cdPasswordField13 eta10) -}
06205bfb1f45316f68ab78848c019bb9
  cdPasswordField13 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Sitio)
                        (\ (ds :: Yesod.Routes.Class.Route Foundation.Sitio
                                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                  -> Data.Text.Internal.Text) ->
                         Login.cdPasswordField_eta2)
                          `cast`
                        (Sym (Yesod.Core.Types.N:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Sitio))
                          `cast`
                        (Sym (Yesod.Core.Types.N:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                     <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)) -}
42995494bbcd481983e863455d67c1cd
  cdPasswordField14 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Login.cdPasswordField15) -}
81e2e8b0bd8b3ba59f0f78c864fc7942
  cdPasswordField15 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Login.cdPasswordField16) -}
fafad0a61b1085929a1465caa0d48428
  cdPasswordField16 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "\" type=\"password\""#) -}
eaed84de21f51f049bca2d96948dddff
  cdPasswordField17 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ (ds :: ())
                   (eta9 :: Yesod.Core.Types.HandlerData
                              Foundation.Sitio
                              (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot]
                   (eta10 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta10, Login.cdPasswordField18 #)) -}
43f82a1fe575789e76263da47b09910e
  cdPasswordField18 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Login.cdPasswordField19
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R)) -}
4e6e9091186587433b93e356d36d2503
  cdPasswordField19 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.Sitio)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   Login.cdPasswordField20
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Sitio))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))) -}
9543713578fa45e3c6d1cbd94987a03c
  cdPasswordField2 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta9 :: Yesod.Core.Types.HandlerData
                              Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta10 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Login.cdPasswordField3 eta10) -}
998ecfff7f74cdf6a245fa88a69c48c3
  cdPasswordField20 ::
    (Yesod.Routes.Class.Route Foundation.Sitio
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ (ds :: Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text) ->
                 Login.cdPasswordField_eta3) -}
1e4dad2021528412738cfbc3e6fa0b12
  cdPasswordField21 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Login.cdPasswordField22) -}
2c58892b98674b9354eb37aafb0d9dec
  cdPasswordField22 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Login.cdPasswordField23) -}
2d5df7386bace7add474b16a8272d96c
  cdPasswordField23 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   ">\n\
                   \</div>\n"#) -}
c759aa3263d37f2e436353c59ad1bbe7
  cdPasswordField24 ::
    [Data.Text.Internal.Text]
    -> [Yesod.Core.Types.FileInfo]
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            (Text.Shakespeare.I18N.SomeMessage
               (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler))
            (GHC.Base.Maybe Data.Text.Internal.Text) #)
  {- Arity: 4, Strictness: <S,1*U><L,A><L,A><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ (rawVals :: [Data.Text.Internal.Text])
                   (ds :: [Yesod.Core.Types.FileInfo])
                   (eta9 :: Yesod.Core.Types.HandlerData
                              Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta10 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case rawVals of wild {
                   []
                   -> (# eta10,
                         Data.Either.Right
                           @ (Text.Shakespeare.I18N.SomeMessage Foundation.Sitio)
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           (GHC.Base.Nothing @ Data.Text.Internal.Text) #)
                        `cast`
                      ((#,#)
                         <'GHC.Types.VoidRep>_R
                         <'GHC.Types.PtrRepLifted>_R
                         <GHC.Prim.State# GHC.Prim.RealWorld>_R
                         (Data.Either.Either
                            (Text.Shakespeare.I18N.SomeMessage
                               (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                         <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R
                            <GHC.Base.Maybe Data.Text.Internal.Text>_R)_R)_R
                   : a ds1
                   -> case ds1 of wild1 {
                        []
                        -> (# eta10,
                              Data.Either.Right
                                @ (Text.Shakespeare.I18N.SomeMessage Foundation.Sitio)
                                @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                (GHC.Base.Just @ Data.Text.Internal.Text a) #)
                             `cast`
                           ((#,#)
                              <'GHC.Types.VoidRep>_R
                              <'GHC.Types.PtrRepLifted>_R
                              <GHC.Prim.State# GHC.Prim.RealWorld>_R
                              (Data.Either.Either
                                 (Text.Shakespeare.I18N.SomeMessage
                                    (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                              <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R
                                 <GHC.Base.Maybe Data.Text.Internal.Text>_R)_R)_R
                        : ipv ipv1
                        -> case Login.cdPasswordField25
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     Data.Either.Either
                                       (Text.Shakespeare.I18N.SomeMessage
                                          (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler))
                                       (GHC.Base.Maybe Data.Text.Internal.Text) #)
                           of {} } }) -}
699022d15bc89a36971a093376330355
  cdPasswordField25 ::
    Foundation.Handler
      (Data.Either.Either
         (Text.Shakespeare.I18N.SomeMessage
            (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler))
         (GHC.Base.Maybe Data.Text.Internal.Text))
  {- Strictness: x -}
14f7eb8dddba54d8717e8e1986a1fdf3
  cdPasswordField3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Sitio)
                        (\ (ds :: Yesod.Routes.Class.Route Foundation.Sitio
                                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                  -> Data.Text.Internal.Text) ->
                         Login.cdPasswordField_eta)
                          `cast`
                        (Sym (Yesod.Core.Types.N:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Sitio))
                          `cast`
                        (Sym (Yesod.Core.Types.N:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                     <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)) -}
ca7aa1e7fb50c17164502cc6c76286d8
  cdPasswordField4 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Login.cdPasswordField5) -}
5793f86f28ad6a3d144d5761025fc897
  cdPasswordField5 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Login.cdPasswordField6) -}
d9dd76f10829a68edb2f79008141a3ff
  cdPasswordField6 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "<div class=\"form-group\"> <h4>Senha:</h4>\n\
                   \<input class=\"form-control\" placeholder=\"Insira a senha do usu\\195\\161rio:\" id=\""#) -}
a9fec7b71d9adcc5f98f534c250e772e
  cdPasswordField7 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta9 :: Yesod.Core.Types.HandlerData
                              Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta10 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Login.cdPasswordField8 eta10) -}
615713583a0cf7f40ad620dd4e4ce7f8
  cdPasswordField8 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Sitio)
                        (\ (ds :: Yesod.Routes.Class.Route Foundation.Sitio
                                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                  -> Data.Text.Internal.Text) ->
                         Login.cdPasswordField_eta1)
                          `cast`
                        (Sym (Yesod.Core.Types.N:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Sitio))
                          `cast`
                        (Sym (Yesod.Core.Types.N:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                     <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)) -}
174a38cc65ab6b4db75679aadd8a5825
  cdPasswordField9 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Login.cdPasswordField10) -}
6543ae479ae7c87cced8fa4af2f45f32
  cdPasswordField_eta :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Login.cdPasswordField4) -}
03c65b3efecf77d8a1fc1674c95904b8
  cdPasswordField_eta1 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Login.cdPasswordField9) -}
6779fea1eca4c1cd38c4dd2c6337c87e
  cdPasswordField_eta2 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Login.cdPasswordField14) -}
dd6b0d6b398775eff4af086c680284fb
  cdPasswordField_eta3 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Login.cdPasswordField21) -}
48960097fced66ff05d443eb89dea88c
  formLogin ::
    Foundation.Form (Data.Text.Internal.Text, Data.Text.Internal.Text)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Login.formLogin1
                  `cast`
                (<Text.Blaze.Html.Html>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Foundation.Handler>_R
                               ((,)
                                  <Yesod.Form.Types.FormResult
                                     (Data.Text.Internal.Text, Data.Text.Internal.Text)>_N
                                  (Yesod.Core.Types.WidgetT
                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                               <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                     <GHC.Types.IO>_N
                                     <()>_N)_N)_N)) -}
32868c6341626de0e368747c3b052cd8
  formLogin1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Foundation.Handler
         ((Yesod.Form.Types.FormResult
             (Data.Text.Internal.Text, Data.Text.Internal.Text),
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (eta105 :: Text.Blaze.Internal.Markup)
                   (eta106 :: (GHC.Base.Maybe
                                 (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                               Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                               [Text.Shakespeare.I18N.Lang]))
                   (eta107 :: Yesod.Form.Types.Ints) ->
                 Yesod.Form.Functions.renderDivs2
                   @ Foundation.Handler
                   @ (Data.Text.Internal.Text, Data.Text.Internal.Text)
                   (Login.$s$fFunctorAForm_$s$fMonadHandlerT @ Foundation.Sitio)
                   GHC.Types.True
                   Login.formLogin2
                     `cast`
                   (Sym (Yesod.Form.Types.N:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                             <(Data.Text.Internal.Text, Data.Text.Internal.Text)>_N))
                   eta105
                   eta106
                   eta107) -}
eb443b76afc02a148141670748057db5
  formLogin2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text, Data.Text.Internal.Text),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ (mr :: (Yesod.Core.Class.Handler.HandlerSite
                             (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                           [Data.Text.Internal.Text]))
                   (env :: GHC.Base.Maybe
                             (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv))
                   (ints :: Yesod.Form.Types.Ints) ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Sitio
                           GHC.Types.IO
                           (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                            [Yesod.Form.Types.FieldView
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                            -> [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                            Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
                   = Login.formLogin_ds
                       `cast`
                     (Yesod.Form.Types.N:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       mr
                       env
                       ints
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                               Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                              Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  case ipv1 of wild { (,,,) w x y z ->
                  case ((Login.formLogin_ds1
                           `cast`
                         (Yesod.Form.Types.N:AForm[0]
                              <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                              <Data.Text.Internal.Text>_N)
                           mr
                           env
                           y)
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                               Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                              Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R)
                         ipv of ds2 { (#,#) ipv2 ipv3 ->
                  case ipv3 of wild1 { (,,,) x1 y1 ints'' z1 ->
                  (# ipv2,
                     (case w of wild2 {
                        Yesod.Form.Types.FormMissing
                        -> case x1 of wild3 {
                             DEFAULT
                             -> Yesod.Form.Types.FormMissing
                                  @ (Data.Text.Internal.Text, Data.Text.Internal.Text)
                             Yesod.Form.Types.FormFailure y2
                             -> Yesod.Form.Types.FormFailure
                                  @ (Data.Text.Internal.Text, Data.Text.Internal.Text)
                                  y2 }
                        Yesod.Form.Types.FormFailure errs
                        -> case x1 of wild3 {
                             DEFAULT
                             -> Yesod.Form.Types.FormFailure
                                  @ (Data.Text.Internal.Text, Data.Text.Internal.Text)
                                  errs
                             Yesod.Form.Types.FormFailure y2
                             -> Yesod.Form.Types.FormFailure
                                  @ (Data.Text.Internal.Text, Data.Text.Internal.Text)
                                  (GHC.Base.++ @ Data.Text.Internal.Text errs y2) }
                        Yesod.Form.Types.FormSuccess a1
                        -> case x1 of wild3 {
                             Yesod.Form.Types.FormMissing
                             -> Yesod.Form.Types.FormMissing
                                  @ (Data.Text.Internal.Text, Data.Text.Internal.Text)
                             Yesod.Form.Types.FormFailure y2
                             -> Yesod.Form.Types.FormFailure
                                  @ (Data.Text.Internal.Text, Data.Text.Internal.Text)
                                  y2
                             Yesod.Form.Types.FormSuccess g
                             -> Yesod.Form.Types.FormSuccess
                                  @ (Data.Text.Internal.Text, Data.Text.Internal.Text)
                                  (a1, g) } },
                      \ (x2 :: [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]) ->
                      x (y1 x2),
                      ints'',
                      case z of wild2 {
                        Yesod.Form.Types.UrlEncoded -> z1
                        Yesod.Form.Types.Multipart
                        -> Yesod.Form.Types.Multipart }) #) } } } })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <(Yesod.Form.Types.FormResult
                                         (Data.Text.Internal.Text, Data.Text.Internal.Text),
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Sitio GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Sitio GHC.Types.IO))],
                                       Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult
                                    (Data.Text.Internal.Text, Data.Text.Internal.Text),
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Sitio GHC.Types.IO))],
                                  Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)))) -}
9c87b9106fb7cffaa5fd613e84a85bd4
  formLogin3 :: Yesod.Form.Types.FieldSettings Foundation.Sitio
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Sitio
                   Login.formLogin4
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Sitio))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
20d7ba7d7ff044f8d12dc3045574cd46
  formLogin4 :: Text.Shakespeare.I18N.SomeMessage Foundation.Sitio
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Sitio
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Data.Text.Internal.Text>_N))
                   Login.formLogin5) -}
35c445eebe90bb461d93c920f420955e
  formLogin5 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                8#
                                s1 of ds4 { (#,#) ipv ipv1 ->
                         Text.Shakespeare.I18N.$wouter
                           (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                           Text.Shakespeare.I18N.$fIsStringSomeMessage1
                           (GHC.Types.[] @ GHC.Types.Char)
                           0#
                           ipv }) of ds4 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
69fc3d8cc88d9288a1b33f387305274f
  formLogin6 :: Yesod.Form.Types.FieldSettings Foundation.Sitio
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Sitio
                   Login.formLogin7
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Sitio))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
d28b958c5fb807ccf865668664200bb6
  formLogin7 :: Text.Shakespeare.I18N.SomeMessage Foundation.Sitio
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Sitio
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Data.Text.Internal.Text>_N))
                   Login.formLogin8) -}
ae46df80ad505ff03dcfdd391dc66db4
  formLogin8 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Login.formLogin9 of ds4 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
44e458476003f1a89f10c971497337df
  formLogin9 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds4 { (#,#) ipv ipv1 ->
                 Text.Shakespeare.I18N.$wouter
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Text.Shakespeare.I18N.$fIsStringSomeMessage1
                   (GHC.Types.[] @ GHC.Types.Char)
                   0#
                   ipv }) -}
cc5546997964acf7c736fe4ca81a1d26
  formLogin_ds ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Sitio
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Foundation.Sitio
                      @ Foundation.Sitio
                      @~ <Foundation.Sitio>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                              <GHC.Types.IO>_N
                                              <Foundation.Sitio>_N)) <Foundation.Sitio>_N)
                   (Login.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Login.nmUsuarioField
                   Login.formLogin6
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
18350c300d9d8580cb80b7f1af2fb86e
  formLogin_ds1 ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Sitio
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Foundation.Sitio
                      @ Foundation.Sitio
                      @~ <Foundation.Sitio>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                              <GHC.Types.IO>_N
                                              <Foundation.Sitio>_N)) <Foundation.Sitio>_N)
                   (Login.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Login.cdPasswordField
                   Login.formLogin3
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
524bd31a502b4d8be67f31c85c80d224
  getLoginR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Login.getLoginR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
1fc2823ae1981799e83f375123fd10ee
  getLoginR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Login.getLoginR_m2
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <GHC.Base.Maybe Data.ByteString.Internal.ByteString>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <GHC.Base.Maybe Data.ByteString.Internal.ByteString>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Base.Nothing
                   -> case (Login.getLoginR28
                              `cast`
                            (Yesod.Core.Types.N:HandlerT[0]
                                 <Foundation.Sitio>_N
                                 <GHC.Types.IO>_N
                                 <(Foundation.Widget, Yesod.Form.Types.Enctype)>_N)
                              r)
                             `cast`
                           (GHC.Types.N:IO[0]
                                <(Foundation.Widget, Yesod.Form.Types.Enctype)>_R)
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case ipv3 of wild1 { (,) widget enctype ->
                      let {
                        lvl49 :: ()
                                 -> Yesod.Core.Types.HandlerData
                                      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                 -> GHC.Types.IO
                                      ((),
                                       Yesod.Core.Types.GWData
                                         (Yesod.Routes.Class.Route Foundation.Sitio))
                          {- Arity: 2 -}
                        = \ (ds :: ())
                            (eta9 :: Yesod.Core.Types.HandlerData
                                       Foundation.Sitio
                                       (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                          Foundation.$wwidgetForm
                            Foundation.LoginR `cast` (Sym (Foundation.D:R:RouteSitio0[0]))
                            enctype
                            widget
                            eta9
                      } in
                      let {
                        lvl50 :: ()
                                 -> Yesod.Core.Types.HandlerData
                                      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                 -> GHC.Types.IO
                                      ((),
                                       Yesod.Core.Types.GWData
                                         (Yesod.Routes.Class.Route Foundation.Sitio))
                          {- Arity: 2 -}
                        = \ (ds :: ())
                            (eta9 :: Yesod.Core.Types.HandlerData
                                       Foundation.Sitio
                                       (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                          Yesod.Core.Types.$fApplicativeWidgetT3
                            @ GHC.Types.IO
                            @ Foundation.Sitio
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Login.getLoginR20
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.N:IO[0]
                                                ((,)
                                                   <()>_R
                                                   (Yesod.Core.Types.GWData
                                                      (Yesod.Routes.Class.Route
                                                         (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                   <GHC.Types.IO>_N
                                                                   <Foundation.Sitio>_N)))_R)_R)_R))
                                 (Sym (Yesod.Core.Types.N:WidgetT[0]
                                           <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                            lvl49
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                           <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                            eta9
                      } in
                      let {
                        lvl51 :: ()
                                 -> Yesod.Core.Types.HandlerData
                                      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                 -> GHC.Types.IO
                                      ((),
                                       Yesod.Core.Types.GWData
                                         (Yesod.Routes.Class.Route Foundation.Sitio))
                          {- Arity: 2 -}
                        = \ (ds :: ())
                            (eta9 :: Yesod.Core.Types.HandlerData
                                       Foundation.Sitio
                                       (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                          Yesod.Core.Types.$fApplicativeWidgetT3
                            @ GHC.Types.IO
                            @ Foundation.Sitio
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Login.getLoginR12
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.N:IO[0]
                                                ((,)
                                                   <()>_R
                                                   (Yesod.Core.Types.GWData
                                                      (Yesod.Routes.Class.Route
                                                         (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                   <GHC.Types.IO>_N
                                                                   <Foundation.Sitio>_N)))_R)_R)_R))
                                 (Sym (Yesod.Core.Types.N:WidgetT[0]
                                           <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                            lvl50
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                           <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                            eta9
                      } in
                      ((Foundation.$fYesodSitio_$cdefaultLayout
                          (\ (eta9 :: Yesod.Core.Types.HandlerData
                                        Foundation.Sitio
                                        (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                           Yesod.Core.Types.$fApplicativeWidgetT3
                             @ GHC.Types.IO
                             @ Foundation.Sitio
                             GHC.Base.$fMonadIO
                             @ ()
                             @ ()
                             Login.getLoginR4
                               `cast`
                             (Trans
                                  (<Yesod.Core.Types.HandlerData
                                      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                   ->_R Sym (GHC.Types.N:IO[0]
                                                 ((,)
                                                    <()>_R
                                                    (Yesod.Core.Types.GWData
                                                       (Yesod.Routes.Class.Route
                                                          (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                    <GHC.Types.IO>_N
                                                                    <Foundation.Sitio>_N)))_R)_R)_R))
                                  (Sym (Yesod.Core.Types.N:WidgetT[0]
                                            <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                             lvl51
                               `cast`
                             (<()>_R
                              ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                            <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                             eta9)
                            `cast`
                          (Sym (Yesod.Core.Types.N:WidgetT[0]
                                    <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv2 } }
                   GHC.Base.Just x
                   -> case (Login.getLoginR_m1
                              `cast`
                            (Yesod.Core.Types.N:HandlerT[0]
                                 <Foundation.Sitio>_N
                                 <GHC.Types.IO>_N
                                 <GHC.Base.Maybe Data.ByteString.Internal.ByteString>_N)
                              r)
                             `cast`
                           (GHC.Types.N:IO[0]
                                <GHC.Base.Maybe Data.ByteString.Internal.ByteString>_R)
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case case ipv3 of wild1 {
                             GHC.Base.Nothing -> GHC.Base.Nothing @ Data.Text.Internal.Text
                             GHC.Base.Just x1
                             -> GHC.Base.Just
                                  @ Data.Text.Internal.Text
                                  (case x1 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                                   Data.Text.Encoding.$wdecodeUtf8With
                                     Data.Text.Encoding.Error.lenientDecode
                                     ww1
                                     ww2
                                     ww3
                                     ww4 }) } of wild1 { DEFAULT ->
                      (Login.getLoginR2
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv2 } } } }) -}
b8a60f25f4383f2c52df9293bcc92282
  getLoginR10 ::
    Yesod.Core.Types.Location
      (Yesod.Routes.Class.Route
         (Yesod.Core.Class.Handler.HandlerSite
            (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
  {- Unfolding: (Yesod.Core.Types.Remote
                   @ (Yesod.Routes.Class.Route
                        (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
                   Login.getLoginR11) -}
e86e040d33ba33f7a20524b8fc50287d
  getLoginR11 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"#) -}
851fda43436b16659eb5a82f1f9b6a61
  getLoginR12 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta9 :: Yesod.Core.Types.HandlerData
                              Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta10 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Login.getLoginR13 eta10) -}
0e5993aacda05fcd9a8c4890a29769b2
  getLoginR13 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, Login.getLoginR14 #)) -}
2c478c402d0cbf7d2cc38b19023e4928
  getLoginR14 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(), Login.getLoginR15)) -}
138e03920aa7d5ece050f7cac26e52ae
  getLoginR15 ::
    Yesod.Core.Types.GWData
      (Yesod.Routes.Class.Route
         (Yesod.Core.Class.Handler.HandlerSite
            (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route
                        (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route
                           (Yesod.Core.Class.Handler.HandlerSite
                              (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   Login.getLoginR16
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT
                                         Foundation.Sitio GHC.Types.IO)))>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route
                              (Yesod.Core.Class.Handler.HandlerSite
                                 (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT
                                         Foundation.Sitio GHC.Types.IO)))>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route
                            (Yesod.Core.Class.Handler.HandlerSite
                               (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route
                            (Yesod.Core.Class.Handler.HandlerSite
                               (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route
                           (Yesod.Core.Class.Handler.HandlerSite
                              (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetT
                                      Foundation.Sitio GHC.Types.IO))>_R))) -}
9973d5421f05f99506ef38079969cad8
  getLoginR16 ::
    [Yesod.Core.Types.Script
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))]
    -> [Yesod.Core.Types.Script
          (Yesod.Routes.Class.Route
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))]
  {- Arity: 1,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Core.Types.Script
                        (Yesod.Routes.Class.Route
                           (Yesod.Core.Class.Handler.HandlerSite
                              (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
                   Login.getLoginR17) -}
894196edb50c65863b64c7a7e6bfedfa
  getLoginR17 ::
    Yesod.Core.Types.Script
      (Yesod.Routes.Class.Route
         (Yesod.Core.Class.Handler.HandlerSite
            (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
  {- Unfolding: (Yesod.Core.Types.Script
                   @ (Yesod.Routes.Class.Route
                        (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
                   Login.getLoginR18
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
63a73d73a9b393e59bf05fe59c15665c
  getLoginR18 ::
    Yesod.Core.Types.Location
      (Yesod.Routes.Class.Route
         (Yesod.Core.Class.Handler.HandlerSite
            (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
  {- Unfolding: (Yesod.Core.Types.Remote
                   @ (Yesod.Routes.Class.Route
                        (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
                   Login.getLoginR19) -}
3b26fc44aa37b42e059d796111846e98
  getLoginR19 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"#) -}
af81e9aa6f7e92181a5a3f8144d85134
  getLoginR2 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   @ Text.Blaze.Html.Html
                   (Login.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Yesod.Core.Handler.N:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Routes.Class.Route Foundation.Sitio>_N))
                   Foundation.CriarAmbienteR
                     `cast`
                   (Sym (Foundation.D:R:RouteSitio0[0]))) -}
bc65500ebca490c4be6988c3057422c8
  getLoginR20 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta9 :: Yesod.Core.Types.HandlerData
                              Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta10 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Login.getLoginR21 eta10) -}
b4403019f83bae0ce69c262a0fa20b5d
  getLoginR21 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, Login.getLoginR22 #)) -}
122fbe4e2504643832d734ac7240b5f7
  getLoginR22 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(), Login.getLoginR23)) -}
cfd4a58188f8efc190cc3b4a277c05e9
  getLoginR23 ::
    Yesod.Core.Types.GWData
      (Yesod.Routes.Class.Route
         (Yesod.Core.Class.Handler.HandlerSite
            (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route
                        (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route
                           (Yesod.Core.Class.Handler.HandlerSite
                              (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   Login.getLoginR24
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT
                                         Foundation.Sitio GHC.Types.IO)))>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route
                              (Yesod.Core.Class.Handler.HandlerSite
                                 (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT
                                         Foundation.Sitio GHC.Types.IO)))>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route
                            (Yesod.Core.Class.Handler.HandlerSite
                               (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route
                            (Yesod.Core.Class.Handler.HandlerSite
                               (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route
                           (Yesod.Core.Class.Handler.HandlerSite
                              (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetT
                                      Foundation.Sitio GHC.Types.IO))>_R))) -}
1a6338f6782985186e488c529bb76303
  getLoginR24 ::
    [Yesod.Core.Types.Script
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))]
    -> [Yesod.Core.Types.Script
          (Yesod.Routes.Class.Route
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))]
  {- Arity: 1,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Core.Types.Script
                        (Yesod.Routes.Class.Route
                           (Yesod.Core.Class.Handler.HandlerSite
                              (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
                   Login.getLoginR25) -}
8b5253e236b38a3a353b992c55fd89b9
  getLoginR25 ::
    Yesod.Core.Types.Script
      (Yesod.Routes.Class.Route
         (Yesod.Core.Class.Handler.HandlerSite
            (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
  {- Unfolding: (Yesod.Core.Types.Script
                   @ (Yesod.Routes.Class.Route
                        (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
                   Login.getLoginR26
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
4d33e5b8cc59eb0bec46f0111e258010
  getLoginR26 ::
    Yesod.Core.Types.Location
      (Yesod.Routes.Class.Route
         (Yesod.Core.Class.Handler.HandlerSite
            (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
  {- Unfolding: (Yesod.Core.Types.Remote
                   @ (Yesod.Routes.Class.Route
                        (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
                   Login.getLoginR27) -}
aefe2148620e4dadc90c0f3ae3d6a87a
  getLoginR27 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"#) -}
9ab0b07e31a79906f685a68281c4c16f
  getLoginR28 ::
    Foundation.Handler (Foundation.Widget, Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ Foundation.Handler
                   @ (Data.Text.Internal.Text, Data.Text.Internal.Text)
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Login.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Login.formLogin1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult
                                        (Data.Text.Internal.Text, Data.Text.Internal.Text)>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
4c27d567946aa0e3981608f71ebc6f22
  getLoginR29 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "_USER"#) -}
6fec908befe9002e12d394d8662c16ce
  getLoginR3 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "_ID"#) -}
c76b46a7c8ade5424e3611cdf426e2b0
  getLoginR4 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta9 :: Yesod.Core.Types.HandlerData
                              Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta10 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Login.getLoginR5 eta10) -}
78810f8091468b0390519a5912b9cf06
  getLoginR5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, Login.getLoginR6 #)) -}
936120fa3f2fa23c3dd880c746ebc790
  getLoginR6 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(), Login.getLoginR7)) -}
f92ef6925ce52b0b439edba8341d769f
  getLoginR7 ::
    Yesod.Core.Types.GWData
      (Yesod.Routes.Class.Route
         (Yesod.Core.Class.Handler.HandlerSite
            (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route
                        (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route
                           (Yesod.Core.Class.Handler.HandlerSite
                              (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route
                              (Yesod.Core.Class.Handler.HandlerSite
                                 (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT
                                         Foundation.Sitio GHC.Types.IO)))>_R))
                   Login.getLoginR8
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT
                                         Foundation.Sitio GHC.Types.IO)))>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route
                            (Yesod.Core.Class.Handler.HandlerSite
                               (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route
                            (Yesod.Core.Class.Handler.HandlerSite
                               (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route
                           (Yesod.Core.Class.Handler.HandlerSite
                              (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetT
                                      Foundation.Sitio GHC.Types.IO))>_R))) -}
0a3bd5eedc9a014202e5e9de3f18a402
  getLoginR8 ::
    [Yesod.Core.Types.Stylesheet
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))]
    -> [Yesod.Core.Types.Stylesheet
          (Yesod.Routes.Class.Route
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))]
  {- Arity: 1,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Core.Types.Stylesheet
                        (Yesod.Routes.Class.Route
                           (Yesod.Core.Class.Handler.HandlerSite
                              (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
                   Login.getLoginR9) -}
5f151e18a3e64495dfed1a318d9a6d98
  getLoginR9 ::
    Yesod.Core.Types.Stylesheet
      (Yesod.Routes.Class.Route
         (Yesod.Core.Class.Handler.HandlerSite
            (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
  {- Unfolding: (Yesod.Core.Types.Stylesheet
                   @ (Yesod.Routes.Class.Route
                        (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))
                   Login.getLoginR10
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
2e78efc2c6f6f3c194215e6e4b962b35
  getLoginR_m1 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio
      GHC.Types.IO
      (GHC.Base.Maybe Data.ByteString.Internal.ByteString)
  {- Unfolding: (Yesod.Core.Handler.lookupSessionBS
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   (Login.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Login.getLoginR3) -}
d32f442bd48467221773cb83795ad43e
  getLoginR_m2 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio
      GHC.Types.IO
      (GHC.Base.Maybe Data.ByteString.Internal.ByteString)
  {- Unfolding: (Yesod.Core.Handler.lookupSessionBS
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   (Login.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Login.getLoginR29) -}
9abab1006fa80fb4007007ce063187b5
  nmUsuarioField ::
    Yesod.Form.Types.Field Foundation.Handler Data.Text.Internal.Text
  {- Strictness: m,
     Unfolding: (Yesod.Form.Types.Field
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   Login.nmUsuarioField12
                     `cast`
                   (<[Data.Text.Internal.Text]>_R
                    ->_R <[Yesod.Core.Types.FileInfo]>_R
                    ->_R Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Data.Either.Either
                                               (Text.Shakespeare.I18N.SomeMessage
                                                  (Yesod.Core.Class.Handler.HandlerSite
                                                     Foundation.Handler))
                                               (GHC.Base.Maybe Data.Text.Internal.Text)>_R))
                             (Sym (Yesod.Core.Types.N:HandlerT[0]
                                       <Foundation.Sitio>_N
                                       <GHC.Types.IO>_N
                                       <Data.Either.Either
                                          (Text.Shakespeare.I18N.SomeMessage
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                Foundation.Handler))
                                          (GHC.Base.Maybe Data.Text.Internal.Text)>_N)))
                   Login.nmUsuarioField1
                     `cast`
                   (<Data.Text.Internal.Text>_R
                    ->_R <Data.Text.Internal.Text>_R
                    ->_R <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]>_R
                    ->_R <Data.Either.Either
                            Data.Text.Internal.Text Data.Text.Internal.Text>_R
                    ->_R <GHC.Types.Bool>_R
                    ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                  (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                       <GHC.Types.IO>_N <Foundation.Sitio>_N)
                                  <GHC.Types.IO>_N
                                  <()>_N))
                   Yesod.Form.Types.UrlEncoded) -}
e13d6681907fe270c55d7c586192185a
  nmUsuarioField1 ::
    Data.Text.Internal.Text
    -> Data.Text.Internal.Text
    -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
    -> Data.Either.Either
         Data.Text.Internal.Text Data.Text.Internal.Text
    -> GHC.Types.Bool
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 6, Strictness: <L,U><L,U><L,U><L,A><L,A><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (6, True, True)
                (\ (w :: Data.Text.Internal.Text)
                   (w1 :: Data.Text.Internal.Text)
                   (w2 :: [(Data.Text.Internal.Text, Data.Text.Internal.Text)])
                   (w3 :: Data.Either.Either
                            Data.Text.Internal.Text Data.Text.Internal.Text)
                   (w4 :: GHC.Types.Bool)
                   (w5 :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                 Login.$wnmUsuarioField w w1 w2 w5) -}
d270d4fb0852a2121d4f5afbfc1737cd
  nmUsuarioField10 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Login.nmUsuarioField11) -}
dfc0e4a9fc562c1ca9989f1df5bb8cd4
  nmUsuarioField11 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "\" type=\"textField\""#) -}
b5f93cd6f6910353d2b04c907911cdde
  nmUsuarioField12 ::
    [Data.Text.Internal.Text]
    -> [Yesod.Core.Types.FileInfo]
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            (Text.Shakespeare.I18N.SomeMessage
               (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler))
            (GHC.Base.Maybe Data.Text.Internal.Text) #)
  {- Arity: 4, Strictness: <S,1*U><L,A><L,A><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ (rawVals :: [Data.Text.Internal.Text])
                   (ds :: [Yesod.Core.Types.FileInfo])
                   (eta9 :: Yesod.Core.Types.HandlerData
                              Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta10 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case rawVals of wild {
                   []
                   -> (# eta10,
                         Data.Either.Right
                           @ (Text.Shakespeare.I18N.SomeMessage Foundation.Sitio)
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           (GHC.Base.Nothing @ Data.Text.Internal.Text) #)
                        `cast`
                      ((#,#)
                         <'GHC.Types.VoidRep>_R
                         <'GHC.Types.PtrRepLifted>_R
                         <GHC.Prim.State# GHC.Prim.RealWorld>_R
                         (Data.Either.Either
                            (Text.Shakespeare.I18N.SomeMessage
                               (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                         <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R
                            <GHC.Base.Maybe Data.Text.Internal.Text>_R)_R)_R
                   : a ds1
                   -> case ds1 of wild1 {
                        []
                        -> (# eta10,
                              Data.Either.Right
                                @ (Text.Shakespeare.I18N.SomeMessage Foundation.Sitio)
                                @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                (GHC.Base.Just @ Data.Text.Internal.Text a) #)
                             `cast`
                           ((#,#)
                              <'GHC.Types.VoidRep>_R
                              <'GHC.Types.PtrRepLifted>_R
                              <GHC.Prim.State# GHC.Prim.RealWorld>_R
                              (Data.Either.Either
                                 (Text.Shakespeare.I18N.SomeMessage
                                    (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                              <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R
                                 <GHC.Base.Maybe Data.Text.Internal.Text>_R)_R)_R
                        : ipv ipv1
                        -> case Login.nmUsuarioField13
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     Data.Either.Either
                                       (Text.Shakespeare.I18N.SomeMessage
                                          (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler))
                                       (GHC.Base.Maybe Data.Text.Internal.Text) #)
                           of {} } }) -}
06a22bfbf563cc23c198b36c747e17dc
  nmUsuarioField13 ::
    Foundation.Handler
      (Data.Either.Either
         (Text.Shakespeare.I18N.SomeMessage
            (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler))
         (GHC.Base.Maybe Data.Text.Internal.Text))
  {- Strictness: x -}
1c1a826287ff0e61133e541f9247907d
  nmUsuarioField2 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta9 :: Yesod.Core.Types.HandlerData
                              Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta10 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Login.nmUsuarioField3 eta10) -}
690108ad02443cd4c71d398b03e1a6c7
  nmUsuarioField3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Sitio)
                        (\ (ds :: Yesod.Routes.Class.Route Foundation.Sitio
                                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                  -> Data.Text.Internal.Text) ->
                         Login.nmUsuarioField_eta)
                          `cast`
                        (Sym (Yesod.Core.Types.N:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Sitio))
                          `cast`
                        (Sym (Yesod.Core.Types.N:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                     <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)) -}
f540654db5586ef9b4a1c81f72e28472
  nmUsuarioField4 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Login.nmUsuarioField5) -}
10927e683cde5eee53b1de04f1043791
  nmUsuarioField5 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Login.nmUsuarioField6) -}
18517219ed45e109d0ef3bb8c283ceb4
  nmUsuarioField6 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "<div class=\"form-group\"> <h4>Email:</h4>\n\
                   \<input class=\"form-control\" placeholder=\"Insira o email do usu\\195\\161rio:\" id=\""#) -}
af5552b31c4bd34d32566d3667eaa7bc
  nmUsuarioField7 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta9 :: Yesod.Core.Types.HandlerData
                              Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta10 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Login.nmUsuarioField8 eta10) -}
0d4fc54c165bf5db2a32d9482b9fc7c6
  nmUsuarioField8 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Sitio)
                        (\ (ds :: Yesod.Routes.Class.Route Foundation.Sitio
                                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                  -> Data.Text.Internal.Text) ->
                         Login.nmUsuarioField_eta1)
                          `cast`
                        (Sym (Yesod.Core.Types.N:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Sitio))
                          `cast`
                        (Sym (Yesod.Core.Types.N:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                     <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)) -}
cbeeaa374995a9516f4aac3f39ec11a0
  nmUsuarioField9 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Login.nmUsuarioField10) -}
504ffaaf3b425862c07bb5b085b80c8b
  nmUsuarioField_eta :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Login.nmUsuarioField4) -}
e0e2edef4e7ac0a921d34b7e0c883fba
  nmUsuarioField_eta1 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Login.nmUsuarioField9) -}
f6994ad9fc001d487a44c4fb8768f6b3
  postLoginR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U(U,U,U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Login.postLoginR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
5ff5a5182741195beda55d50f518218e
  postLoginR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U(U,U,U,U,U)><S,U> -}
739ba12272c1966b1965f9be1dfdcf29
  postLogoutR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <S(SSSSL),1*U(U,U,U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Login.postLogoutR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
2cc19b3699e056d829dee7b01cf6ae6a
  postLogoutR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <S(SSSSL),1*U(U,U,U,U,U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Yesod.Core.Types.HandlerData ww1 ww2 ww3 ww4 ww6 ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ Yesod.Core.Types.GHState
                        ww3
                        w1 of ds4 { (#,#) ipv ipv1 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ Yesod.Core.Types.GHState
                        ww3
                        (Yesod.Core.Handler.deleteSession1 Login.getLoginR29 ipv1)
                        ipv of s2# { DEFAULT ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ Yesod.Core.Types.GHState
                        ww3
                        s2# of ds1 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ Yesod.Core.Types.GHState
                        ww3
                        (Yesod.Core.Handler.deleteSession1 Login.getLoginR3 ipv3)
                        ipv2 of s2#1 { DEFAULT ->
                 (Login.postLogoutR_k
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    (Yesod.Core.Types.HandlerData
                       @ (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))
                       @ ()
                       ww1
                       ww2
                         `cast`
                       (Yesod.Core.Types.RunHandlerEnv
                          (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                    <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R
                       ww3
                       ww4
                         `cast`
                       ((Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                     <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R
                        ->_R Sub (Yesod.Core.Types.D:R:MonadRouteIO[0]))
                       ww6)
                      `cast`
                    (Yesod.Core.Types.HandlerData
                       (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                            <GHC.Types.IO>_N <Foundation.Sitio>_N)
                       (Sub (Sym (Yesod.Core.Types.D:R:MonadRouteIO[0]))))_R)
                   `cast`
                 (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                   s2#1 } } } } }) -}
95438ff1ae4d3b1c3500927cf7c3680a
  postLogoutR_k ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   @ Text.Blaze.Html.Html
                   (Login.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Yesod.Core.Handler.N:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Routes.Class.Route Foundation.Sitio>_N))
                   Foundation.LoginR `cast` (Sym (Foundation.D:R:RouteSitio0[0]))) -}
"SPEC/Login $fApplicativeHandlerT @ IO _" [ALWAYS] forall @ site
                                                          ($dMonad :: GHC.Base.Monad GHC.Types.IO)
  Yesod.Core.Types.$fApplicativeHandlerT @ GHC.Types.IO
                                         @ site
                                         $dMonad
  = Login.$s$fApplicativeHandlerT @ site
"SPEC/Login $fApplicativeHandlerT_$creturn @ IO _" [ALWAYS] forall @ site
                                                                   ($dMonad :: GHC.Base.Monad
                                                                                 GHC.Types.IO)
  Yesod.Core.Types.$fApplicativeHandlerT_$creturn @ GHC.Types.IO
                                                  @ site
                                                  $dMonad
  = Login.$s$fApplicativeHandlerT_$creturn @ site
"SPEC/Login $fFunctorHandlerT @ IO _" [ALWAYS] forall @ site
                                                      ($dMonad :: GHC.Base.Monad GHC.Types.IO)
  Yesod.Core.Types.$fFunctorHandlerT @ GHC.Types.IO @ site $dMonad
  = Login.$s$fApplicativeHandlerT_$s$fFunctorHandlerT @ site
"SPEC/Login $fMonadBasebHandlerT @ IO @ IO _" [ALWAYS] forall @ site
                                                              ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                GHC.Types.IO
                                                                                GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT @ GHC.Types.IO
                                        @ GHC.Types.IO
                                        @ site
                                        $dMonadBase
  = Login.$s$fMonadBasebHandlerT @ site
"SPEC/Login $fMonadBasebHandlerT_$cliftBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                         ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                           GHC.Types.IO
                                                                                           GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cliftBase @ GHC.Types.IO
                                                   @ GHC.Types.IO
                                                   @ site
                                                   $dMonadBase
  = Login.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cliftBase
      @ site
"SPEC/Login $fMonadBasebHandlerT_$cp1MonadBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                            ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                              GHC.Types.IO
                                                                                              GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cp1MonadBase @ GHC.Types.IO
                                                      @ GHC.Types.IO
                                                      @ site
                                                      $dMonadBase
  = Login.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp1MonadBase
      @ site
"SPEC/Login $fMonadBasebHandlerT_$cp3MonadBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                            ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                              GHC.Types.IO
                                                                                              GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cp3MonadBase @ GHC.Types.IO
                                                      @ GHC.Types.IO
                                                      @ site
                                                      $dMonadBase
  = Login.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp3MonadBase
      @ site
"SPEC/Login $fMonadHandlerHandlerT @ IO _" [ALWAYS] forall @ site
                                                           ($d(%,,,,%) :: Control.Monad.Trans.Resource.MonadResourceBase
                                                                            GHC.Types.IO)
  Yesod.Core.Class.Handler.$fMonadHandlerHandlerT @ GHC.Types.IO
                                                  @ site
                                                  $d(%,,,,%)
  = Login.$s$fMonadHandlerHandlerT @ site
"SPEC/Login $fMonadHandlerT @ IO _" [ALWAYS] forall @ site
                                                    ($dMonad :: GHC.Base.Monad GHC.Types.IO)
  Yesod.Core.Types.$fMonadHandlerT @ GHC.Types.IO @ site $dMonad
  = Login.$s$fFunctorAForm_$s$fMonadHandlerT @ site
"SPEC/Login $fMonadHandlerT_$cfail @ IO _" [ALWAYS] forall @ site
                                                           ($dMonad :: GHC.Base.Monad GHC.Types.IO)
  Yesod.Core.Types.$fMonadHandlerT_$cfail @ GHC.Types.IO
                                          @ site
                                          $dMonad
  = Login.$s$fFunctorAForm_$s$fMonadHandlerT_$cfail @ site
"SPEC/Login $fMonadIOHandlerT @ IO _" [ALWAYS] forall @ site
                                                      ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                      GHC.Types.IO)
  Yesod.Core.Types.$fMonadIOHandlerT @ GHC.Types.IO @ site $dMonadIO
  = Login.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
      @ site
"SPEC/Login $fMonadIOHandlerT_$cp1MonadLogger @ IO _" [ALWAYS] forall @ site
                                                                      ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                      GHC.Types.IO)
  Yesod.Core.Types.$fMonadIOHandlerT_$cp1MonadLogger @ GHC.Types.IO
                                                     @ site
                                                     $dMonadIO
  = Login.$s$fMonadBasebHandlerT_$s$fMonadIOHandlerT_$cp1MonadLogger
      @ site
"SPEC/Login $fMonadResourceHandlerT @ IO _" [ALWAYS] forall @ site
                                                            ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                               GHC.Types.IO)
                                                            ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                              GHC.Types.IO
                                                                              GHC.Types.IO)
                                                            ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                            GHC.Types.IO)
  Yesod.Core.Types.$fMonadResourceHandlerT @ GHC.Types.IO
                                           @ site
                                           $dMonadIO
                                           $dMonadBase
                                           $dMonadThrow
  = Login.$s$fMonadResourceHandlerT @ site
"SPEC/Login $fMonadResourceHandlerT_$cp1MonadResource @ IO _" [ALWAYS] forall @ site
                                                                              ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                                 GHC.Types.IO)
                                                                              ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                GHC.Types.IO
                                                                                                GHC.Types.IO)
                                                                              ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                              GHC.Types.IO)
  Yesod.Core.Types.$fMonadResourceHandlerT_$cp1MonadResource @ GHC.Types.IO
                                                             @ site
                                                             $dMonadIO
                                                             $dMonadBase
                                                             $dMonadThrow
  = Login.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp1MonadResource
      @ site
"SPEC/Login $fMonadResourceHandlerT_$cp2MonadResource @ IO _" [ALWAYS] forall @ site
                                                                              ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                                 GHC.Types.IO)
                                                                              ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                GHC.Types.IO
                                                                                                GHC.Types.IO)
                                                                              ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                              GHC.Types.IO)
  Yesod.Core.Types.$fMonadResourceHandlerT_$cp2MonadResource @ GHC.Types.IO
                                                             @ site
                                                             $dMonadIO
                                                             $dMonadBase
                                                             $dMonadThrow
  = Login.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp2MonadResource
      @ site
"SPEC/Login $fMonadResourceHandlerT_$cp3MonadResource @ IO _" [ALWAYS] forall @ site
                                                                              ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                                 GHC.Types.IO)
                                                                              ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                GHC.Types.IO
                                                                                                GHC.Types.IO)
                                                                              ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                              GHC.Types.IO)
  Yesod.Core.Types.$fMonadResourceHandlerT_$cp3MonadResource @ GHC.Types.IO
                                                             @ site
                                                             $dMonadIO
                                                             $dMonadBase
                                                             $dMonadThrow
  = Login.$s$fMonadBasebHandlerT_$s$fMonadResourceHandlerT_$cp3MonadResource
      @ site
"SPEC/Login $fMonadResourceHandlerT_$cp4MonadResource @ IO _" [ALWAYS] forall @ site
                                                                              ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                                 GHC.Types.IO)
                                                                              ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                GHC.Types.IO
                                                                                                GHC.Types.IO)
                                                                              ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                              GHC.Types.IO)
  Yesod.Core.Types.$fMonadResourceHandlerT_$cp4MonadResource @ GHC.Types.IO
                                                             @ site
                                                             $dMonadIO
                                                             $dMonadBase
                                                             $dMonadThrow
  = Login.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp4MonadResource
      @ site
"SPEC/Login $fMonadThrowHandlerT @ IO _" [ALWAYS] forall @ site
                                                         ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                            GHC.Types.IO)
  Yesod.Core.Types.$fMonadThrowHandlerT @ GHC.Types.IO
                                        @ site
                                        $dMonadThrow
  = Login.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT
      @ site
"SPEC/Login $fMonadThrowHandlerT_$cthrowM @ IO _" [ALWAYS] forall @ site
                                                                  ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                     GHC.Types.IO)
  Yesod.Core.Types.$fMonadThrowHandlerT_$cthrowM @ GHC.Types.IO
                                                 @ site
                                                 $dMonadThrow
  = Login.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT_$cthrowM
      @ site
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

